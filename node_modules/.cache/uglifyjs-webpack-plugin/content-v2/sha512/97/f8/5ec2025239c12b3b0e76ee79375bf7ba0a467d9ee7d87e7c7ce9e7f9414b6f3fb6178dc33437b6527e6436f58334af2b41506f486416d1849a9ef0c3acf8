{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/home/yisun/jupyterlab_dropbox/src/nb_index.js\",\"/home/yisun/jupyterlab_dropbox/src/index.js\",\"/home/yisun/jupyterlab_dropbox/src/dropbox.js\",\"/home/yisun/jupyterlab_dropbox/src/import_service.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"document\",\"querySelector\",\"getAttribute\",\"version\",\"__WEBPACK_AMD_DEFINE_ARRAY__\",\"e\",\"Error\",\"code\",\"undefined\",\"__WEBPACK_AMD_DEFINE_RESULT__\",\"Dropbox\",\"utils\",\"DropBox\",\"options\",\"this\",\"base_url\",\"config\",\"loaded\",\"then\",\"data\",\"dropbox\",\"window\",\"appKey\",\"appkey\",\"console\",\"log\",\"pull\",\"Promise\",\"resolve\",\"reject\",\"dropbox_options\",\"success\",\"selected\",\"cancel\",\"linkType\",\"multiselect\",\"choose\",\"push\",\"files\",\"progress_callback\",\"progress\",\"error\",\"errorMessage\",\"save\",\"apply\",\"ImportService\",\"api_url\",\"url_parts\",\"url_join_encode\",\"arguments\",\"url_path_join\",\"post\",\"path\",\"settings\",\"method\",\"cache\",\"contentType\",\"JSON\",\"stringify\",\"dataType\",\"url\",\"promising_ajax\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 0);\\n\",\"__webpack_public_path__ = document.querySelector('body').getAttribute('data-base-url') + 'nbextensions/jupyter_dropbox/';\\n\\n// Export widget models and views, and the npm package version number.\\nmodule.exports = require('./index.js');\",\"module.exports = require('./dropbox.js');\\nmodule.exports = require('./import_service.js');\\nmodule.exports['version'] = require('../package.json').version;\\n\\n\",\"requirejs.config({\\n    paths: {\\n        \\\"dropboxchooser\\\": [\\\"https://www.dropbox.com/static/api/2/dropins\\\"]\\n    },\\n    //Remember: only use shim config for non-AMD scripts,\\n    //scripts that do not already call define(). The shim\\n    //config will not work correctly if used on AMD scripts,\\n    //in particular, the exports and init config will not\\n    //be triggered, and the deps config will be confusing\\n    //for those cases.\\n    shim: {\\n        'dropboxchooser': {\\n            deps: [],\\n            exports: \\\"Dropbox\\\",\\n            init: function () {\\n                return window.Dropbox\\n            }\\n        }\\n    }\\n})\\n\\n\\ndefine([\\n    \\\"dropboxchooser\\\",\\n    \\\"base/js/utils\\\",\\n    ],\\n    function(Dropbox,\\n             utils\\n             ) {\\n\\n        var DropBox = function(options) {\\n            options = options || {}\\n            this.base_url = options.base_url || \\\"\\\"\\n            // TODO: is this really a good place to wait for the ajax call?\\n            // make sure options.config is a promise\\n            options.config.loaded.then(function() {\\n                if (options.config.data.dropbox) {\\n                    // TODO: would be nice to spit out some warning or\\n                    //       deactivate dropbox plugin if not configure\\n                    window.Dropbox.appKey = options.config.data.dropbox.appkey\\n                } else {\\n                    console.log('No dropbox appkey configured ... extension will not work')\\n                }\\n            })\\n        }\\n\\n        // get list of urls from remote storage\\n        DropBox.prototype.pull = function() {\\n            // TODO: any notifications if user closes window?\\n            return new Promise(function(resolve, reject) {\\n\\n                var dropbox_options = {\\n                    success: function(selected) {\\n                        // TODO: could do some filtering here?\\n                        resolve(selected)\\n                    },\\n                    cancel: function() {\\n                        // TODO: rather call resolve with empty list?\\n                        //       can I detect errors here?\\n                        reject('User cancelled dialog')\\n                    },\\n                    linkType: 'direct', // or 'preview'\\n                    multiselect: true,\\n                    // extensions: ['.pdf', '.doc', ...]\\n                }\\n\\n                Dropbox.choose(dropbox_options)\\n            })\\n        }\\n\\n        // push list of urls to remote storage\\n        DropBox.prototype.push = function(files, progress_callback) {\\n            return new Promise(function(resolve, reject) {\\n\\n                var dropbox_options = {\\n                    files: files,\\n                    success: function() {\\n                        console.log('Upload to dropbox submitted')\\n                        resolve('Upload to dropbox finished')\\n                    },\\n                    progress: function(progress) {\\n                        if (progress_callback) {\\n                            progress_callback(progress)\\n                        }\\n                        // console.log('upload progress', progress)\\n                        // Dropbox doesn't return a useful progress indicator\\n                        // it is 0 for still going and 1 for finished\\n                    },\\n                    cancel: function() {\\n                        reject('User cancelled dialog')\\n                    },\\n                    error: function(errorMessage) {\\n                        reject('Push to Dropbox failed: ' + errorMessage)\\n                    }\\n                }\\n\\n                Dropbox.save(dropbox_options)\\n\\n\\n            })\\n        }\\n\\n\\n        return {\\n            'DropBox': DropBox\\n        }\\n})\\n\",\"/*\\n\\n    A service to handle file import from external cloud storage services.\\n\\n    This is rather meant as API service, to query notebook server for import / export state,\\n    and manage import / export tasks.\\n*/\\n\\n\\ndefine([\\\"base/js/utils\\\"], function(utils) {\\n\\n    \\\"Use strict\\\"\\n\\n    // constructor\\n    var ImportService = function(options) {\\n        options = options || {}\\n        // notebook server prefix\\n        this.base_url = options.base_url || \\\"\\\"\\n    }\\n\\n    ImportService.prototype.api_url = function() {\\n        var url_parts = [\\n            this.base_url, 'api/fetch',\\n            utils.url_join_encode.apply(null, arguments)\\n        ]\\n        return utils.url_path_join.apply(null, url_parts)\\n    }\\n\\n\\n    /**\\n     * Make an API call\\n     *\\n     * path ... the contents / workspace folder to work within\\n     * files ... object(s) {'url', 'name'? } to fetch\\n     *\\n     * returns a Promise with  resolves to status ok or error\\n     */\\n    ImportService.prototype.post = function(path, files, options) {\\n        var settings = {\\n            // request\\n            method : \\\"POST\\\",\\n            cache : false,\\n            // post data\\n            contentType: \\\"application/json\\\",\\n            data: JSON.stringify(files),\\n            // response data\\n            dataType : \\\"json\\\"\\n        }\\n        var url = this.api_url(path)\\n\\n        return utils.promising_ajax(url, settings)\\n    }\\n\\n\\n    /**\\n     *\\n     * path ... contents / workspace folder to query\\n     *\\n     * returns list of current fetches in progress\\n     *\\n     * TODO: add option to retrieve finished fetches?\\n     */\\n    ImportService.prototype.get = function(path, options) {\\n        var settings = {\\n            // request\\n            method : \\\"GET\\\",\\n            cache : false,\\n            // response data\\n            dataType : \\\"json\\\"\\n        }\\n        var url = this.api_url(path)\\n        return utils.promising_ajax(url, settings)\\n    }\\n\\n\\n    // notebook list: ... items with '.list_item:not(.new-file)' .. won't be cleared\\n\\n\\n\\n\\n    // module exports\\n    return {\\n        'ImportService': ImportService\\n    }\\n\\n})\\n\"]}","code":"define(function(){return function(e){var n={};function o(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,o),r.l=!0,r.exports}return o.m=e,o.c=n,o.d=function(e,n,t){o.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},o.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},o.t=function(e,n){if(1&n&&(e=o(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var r in e)o.d(t,r,function(n){return e[n]}.bind(null,r));return t},o.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(n,\"a\",n),n},o.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},o.p=\"\",o(o.s=0)}([function(e,n,o){o.p=document.querySelector(\"body\").getAttribute(\"data-base-url\")+\"nbextensions/jupyter_dropbox/\",e.exports=o(1)},function(e,n,o){e.exports=o(2),e.exports=o(3),e.exports.version=o(4).version},function(e,n,o){var t,r;t=[!function(){var e=new Error(\"Cannot find module 'dropboxchooser'\");throw e.code=\"MODULE_NOT_FOUND\",e}(),!function(){var e=new Error(\"Cannot find module 'base/js/utils'\");throw e.code=\"MODULE_NOT_FOUND\",e}()],void 0===(r=function(e,n){var o=function(e){e=e||{},this.base_url=e.base_url||\"\",e.config.loaded.then(function(){e.config.data.dropbox?window.Dropbox.appKey=e.config.data.dropbox.appkey:console.log(\"No dropbox appkey configured ... extension will not work\")})};return o.prototype.pull=function(){return new Promise(function(n,o){var t={success:function(e){n(e)},cancel:function(){o(\"User cancelled dialog\")},linkType:\"direct\",multiselect:!0};e.choose(t)})},o.prototype.push=function(n,o){return new Promise(function(t,r){var i={files:n,success:function(){console.log(\"Upload to dropbox submitted\"),t(\"Upload to dropbox finished\")},progress:function(e){o&&o(e)},cancel:function(){r(\"User cancelled dialog\")},error:function(e){r(\"Push to Dropbox failed: \"+e)}};e.save(i)})},{DropBox:o}}.apply(n,t))||(e.exports=r)},function(e,n,o){var t,r;t=[!function(){var e=new Error(\"Cannot find module 'base/js/utils'\");throw e.code=\"MODULE_NOT_FOUND\",e}()],void 0===(r=function(e){\"Use strict\";var n=function(e){e=e||{},this.base_url=e.base_url||\"\"};return n.prototype.api_url=function(){var n=[this.base_url,\"api/fetch\",e.url_join_encode.apply(null,arguments)];return e.url_path_join.apply(null,n)},n.prototype.post=function(n,o,t){var r={method:\"POST\",cache:!1,contentType:\"application/json\",data:JSON.stringify(o),dataType:\"json\"},i=this.api_url(n);return e.promising_ajax(i,r)},n.prototype.get=function(n,o){var t=this.api_url(n);return e.promising_ajax(t,{method:\"GET\",cache:!1,dataType:\"json\"})},{ImportService:n}}.apply(n,t))||(e.exports=r)},function(e){e.exports={private:!0,name:\"jupyterlab_dropbox\",version:\"0.0.1\",description:\"A JupyterLab extension.\",author:\"yi sun\",main:\"src/index.js\",keywords:[\"jupyter\",\"jupyterlab\",\"jupyterlab-extension\"],jupyterlab:{extension:\"src/lab_extension\"},scripts:{build:\"webpack\",clean:\"rimraf dist/\",postinstall:\"npm run build\",prepack:\"npm run postinstall\",test:'echo \"Error: no test specified\" && exit 1',watch:\"webpack --watch\"},dependencies:{\"@jupyterlab/filebrowser\":\"^0.18.5\",\"@jupyterlab/mainmenu\":\"^0.7.4\",\"@phosphor/widgets\":\"^1.6.0\"},devDependencies:{\"fs-extra\":\"^7.0.0\",\"json-loader\":\"^0.5.7\",webpack:\"^4.17.1\",\"webpack-cli\":\"^3.1.0\"}}}])});","extractedComments":[]}
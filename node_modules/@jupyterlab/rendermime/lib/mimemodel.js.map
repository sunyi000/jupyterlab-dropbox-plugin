{"version":3,"file":"mimemodel.js","sourceRoot":"","sources":["../../../../rendermime/src/mimemodel.ts"],"names":[],"mappings":";;AAQA;;GAEG;AACH;IACE;;OAEG;IACH,YAAY,UAA8B,EAAE;QAC1C,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC;IACpD,CAAC;IAOD;;OAEG;IACH,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED;;OAEG;IACH,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED;;;;;;OAMG;IACH,OAAO,CAAC,OAA+C;QACrD,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC;QACpD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC;CAKF;AA9CD,8BA8CC;AAgCD;;GAEG;AACH,IAAU,OAAO,CAOhB;AAPD,WAAU,OAAO;IACf;;OAEG;IACH;QACE,WAAW;IACb,CAAC;IAFe,YAAI,OAEnB,CAAA;AACH,CAAC,EAPS,OAAO,KAAP,OAAO,QAOhB","sourcesContent":["/*-----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { ReadonlyJSONObject } from '@phosphor/coreutils';\n\nimport { IRenderMime } from '@jupyterlab/rendermime-interfaces';\n\n/**\n * The default mime model implementation.\n */\nexport class MimeModel implements IRenderMime.IMimeModel {\n  /**\n   * Construct a new mime model.\n   */\n  constructor(options: MimeModel.IOptions = {}) {\n    this.trusted = !!options.trusted;\n    this._data = options.data || {};\n    this._metadata = options.metadata || {};\n    this._callback = options.callback || Private.noOp;\n  }\n\n  /**\n   * Whether the model is trusted.\n   */\n  readonly trusted: boolean;\n\n  /**\n   * The data associated with the model.\n   */\n  get data(): ReadonlyJSONObject {\n    return this._data;\n  }\n\n  /**\n   * The metadata associated with the model.\n   */\n  get metadata(): ReadonlyJSONObject {\n    return this._metadata;\n  }\n\n  /**\n   * Set the data associated with the model.\n   *\n   * #### Notes\n   * Depending on the implementation of the mime model,\n   * this call may or may not have deferred effects,\n   */\n  setData(options: IRenderMime.IMimeModel.ISetDataOptions): void {\n    this._data = options.data || this._data;\n    this._metadata = options.metadata || this._metadata;\n    this._callback(options);\n  }\n\n  private _callback: (options: IRenderMime.IMimeModel.ISetDataOptions) => void;\n  private _data: ReadonlyJSONObject;\n  private _metadata: ReadonlyJSONObject;\n}\n\n/**\n * The namespace for MimeModel class statics.\n */\nexport namespace MimeModel {\n  /**\n   * The options used to create a mime model.\n   */\n  export interface IOptions {\n    /**\n     * Whether the model is trusted.  Defaults to `false`.\n     */\n    trusted?: boolean;\n\n    /**\n     * A callback function for when the data changes.\n     */\n    callback?: (options: IRenderMime.IMimeModel.ISetDataOptions) => void;\n\n    /**\n     * The initial mime data.\n     */\n    data?: ReadonlyJSONObject;\n\n    /**\n     * The initial mime metadata.\n     */\n    metadata?: ReadonlyJSONObject;\n  }\n}\n\n/**\n * The namespace for module private data.\n */\nnamespace Private {\n  /**\n   * A no-op callback function.\n   */\n  export function noOp() {\n    /* no-op */\n  }\n}\n"]}
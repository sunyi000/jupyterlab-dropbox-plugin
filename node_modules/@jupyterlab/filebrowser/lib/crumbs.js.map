{"version":3,"file":"crumbs.js","sourceRoot":"","sources":["../../../../filebrowser/src/crumbs.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ArrayExt } from '@phosphor/algorithm';\n\nimport { Message } from '@phosphor/messaging';\n\nimport { IDragEvent } from '@phosphor/dragdrop';\n\nimport { ElementExt } from '@phosphor/domutils';\n\nimport { Widget } from '@phosphor/widgets';\n\nimport { DOMUtils, showErrorMessage } from '@jupyterlab/apputils';\n\nimport { PathExt } from '@jupyterlab/coreutils';\n\nimport { renameFile } from '@jupyterlab/docmanager';\n\nimport { FileBrowserModel } from './model';\n\n/**\n * The class name added to material icons\n */\nconst MATERIAL_CLASS = 'jp-MaterialIcon';\n\n/**\n * The class name added to the breadcrumb node.\n */\nconst BREADCRUMB_CLASS = 'jp-BreadCrumbs';\n\n/**\n * The class name added to add the home icon for the breadcrumbs\n */\nconst BREADCRUMB_HOME = 'jp-HomeIcon';\n\n/**\n * The class named associated to the ellipses icon\n */\nconst BREADCRUMB_ELLIPSES = 'jp-EllipsesIcon';\n\n/**\n * The class name added to the breadcrumb node.\n */\nconst BREADCRUMB_ITEM_CLASS = 'jp-BreadCrumbs-item';\n\n/**\n * Bread crumb paths.\n */\nconst BREAD_CRUMB_PATHS = ['/', '../../', '../', ''];\n\n/**\n * The mime type for a contents drag object.\n */\nconst CONTENTS_MIME = 'application/x-jupyter-icontents';\n\n/**\n * The class name added to drop targets.\n */\nconst DROP_TARGET_CLASS = 'jp-mod-dropTarget';\n\n/**\n * A class which hosts folder breadcrumbs.\n */\nexport class BreadCrumbs extends Widget {\n  /**\n   * Construct a new file browser crumb widget.\n   *\n   * @param model - The file browser view model.\n   */\n  constructor(options: BreadCrumbs.IOptions) {\n    super();\n    this._model = options.model;\n    this.addClass(BREADCRUMB_CLASS);\n    this._crumbs = Private.createCrumbs();\n    this._crumbSeps = Private.createCrumbSeparators();\n    this.node.appendChild(this._crumbs[Private.Crumb.Home]);\n    this._model.refreshed.connect(this.update, this);\n  }\n\n  /**\n   * Handle the DOM events for the bread crumbs.\n   *\n   * @param event - The DOM event sent to the widget.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the panel's DOM node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'click':\n        this._evtClick(event as MouseEvent);\n        break;\n      case 'p-dragenter':\n        this._evtDragEnter(event as IDragEvent);\n        break;\n      case 'p-dragleave':\n        this._evtDragLeave(event as IDragEvent);\n        break;\n      case 'p-dragover':\n        this._evtDragOver(event as IDragEvent);\n        break;\n      case 'p-drop':\n        this._evtDrop(event as IDragEvent);\n        break;\n      default:\n        return;\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'after-attach'` message.\n   */\n  protected onAfterAttach(msg: Message): void {\n    super.onAfterAttach(msg);\n    this.update();\n    let node = this.node;\n    node.addEventListener('click', this);\n    node.addEventListener('p-dragenter', this);\n    node.addEventListener('p-dragleave', this);\n    node.addEventListener('p-dragover', this);\n    node.addEventListener('p-drop', this);\n  }\n\n  /**\n   * A message handler invoked on a `'before-detach'` message.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    super.onBeforeDetach(msg);\n    let node = this.node;\n    node.removeEventListener('click', this);\n    node.removeEventListener('p-dragenter', this);\n    node.removeEventListener('p-dragleave', this);\n    node.removeEventListener('p-dragover', this);\n    node.removeEventListener('p-drop', this);\n  }\n\n  /**\n   * A handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    // Update the breadcrumb list.\n    const contents = this._model.manager.services.contents;\n    const localPath = contents.localPath(this._model.path);\n    Private.updateCrumbs(this._crumbs, this._crumbSeps, localPath);\n  }\n\n  /**\n   * Handle the `'click'` event for the widget.\n   */\n  private _evtClick(event: MouseEvent): void {\n    // Do nothing if it's not a left mouse press.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Find a valid click target.\n    let node = event.target as HTMLElement;\n    while (node && node !== this.node) {\n      if (node.classList.contains(BREADCRUMB_ITEM_CLASS)) {\n        let index = ArrayExt.findFirstIndex(\n          this._crumbs,\n          value => value === node\n        );\n        this._model\n          .cd(BREAD_CRUMB_PATHS[index])\n          .catch(error => showErrorMessage('Open Error', error));\n\n        // Stop the event propagation.\n        event.preventDefault();\n        event.stopPropagation();\n        return;\n      }\n      node = node.parentElement as HTMLElement;\n    }\n  }\n\n  /**\n   * Handle the `'p-dragenter'` event for the widget.\n   */\n  private _evtDragEnter(event: IDragEvent): void {\n    if (event.mimeData.hasData(CONTENTS_MIME)) {\n      let index = ArrayExt.findFirstIndex(this._crumbs, node =>\n        ElementExt.hitTest(node, event.clientX, event.clientY)\n      );\n      if (index !== -1) {\n        if (index !== Private.Crumb.Current) {\n          this._crumbs[index].classList.add(DROP_TARGET_CLASS);\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle the `'p-dragleave'` event for the widget.\n   */\n  private _evtDragLeave(event: IDragEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    let dropTarget = DOMUtils.findElement(this.node, DROP_TARGET_CLASS);\n    if (dropTarget) {\n      dropTarget.classList.remove(DROP_TARGET_CLASS);\n    }\n  }\n\n  /**\n   * Handle the `'p-dragover'` event for the widget.\n   */\n  private _evtDragOver(event: IDragEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    event.dropAction = event.proposedAction;\n    let dropTarget = DOMUtils.findElement(this.node, DROP_TARGET_CLASS);\n    if (dropTarget) {\n      dropTarget.classList.remove(DROP_TARGET_CLASS);\n    }\n    let index = ArrayExt.findFirstIndex(this._crumbs, node =>\n      ElementExt.hitTest(node, event.clientX, event.clientY)\n    );\n    if (index !== -1) {\n      this._crumbs[index].classList.add(DROP_TARGET_CLASS);\n    }\n  }\n\n  /**\n   * Handle the `'p-drop'` event for the widget.\n   */\n  private _evtDrop(event: IDragEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.proposedAction === 'none') {\n      event.dropAction = 'none';\n      return;\n    }\n    if (!event.mimeData.hasData(CONTENTS_MIME)) {\n      return;\n    }\n    event.dropAction = event.proposedAction;\n\n    let target = event.target as HTMLElement;\n    while (target && target.parentElement) {\n      if (target.classList.contains(DROP_TARGET_CLASS)) {\n        target.classList.remove(DROP_TARGET_CLASS);\n        break;\n      }\n      target = target.parentElement;\n    }\n\n    // Get the path based on the target node.\n    let index = ArrayExt.findFirstIndex(this._crumbs, node => node === target);\n    if (index === -1) {\n      return;\n    }\n\n    const model = this._model;\n    const path = PathExt.resolve(model.path, BREAD_CRUMB_PATHS[index]);\n    const manager = model.manager;\n\n    // Move all of the items.\n    let promises: Promise<any>[] = [];\n    let oldPaths = event.mimeData.getData(CONTENTS_MIME) as string[];\n    for (let oldPath of oldPaths) {\n      let localOldPath = manager.services.contents.localPath(oldPath);\n      let name = PathExt.basename(localOldPath);\n      let newPath = PathExt.join(path, name);\n      promises.push(renameFile(manager, oldPath, newPath));\n    }\n    Promise.all(promises).catch(err => {\n      showErrorMessage('Move Error', err);\n    });\n  }\n\n  private _model: FileBrowserModel;\n  private _crumbs: ReadonlyArray<HTMLElement>;\n  private _crumbSeps: ReadonlyArray<HTMLElement>;\n}\n\n/**\n * The namespace for the `BreadCrumbs` class statics.\n */\nexport namespace BreadCrumbs {\n  /**\n   * An options object for initializing a bread crumb widget.\n   */\n  export interface IOptions {\n    /**\n     * A file browser model instance.\n     */\n    model: FileBrowserModel;\n  }\n}\n\n/**\n * The namespace for the crumbs private data.\n */\nnamespace Private {\n  /**\n   * Breadcrumb item list enum.\n   */\n  export enum Crumb {\n    Home,\n    Ellipsis,\n    Parent,\n    Current\n  }\n\n  /**\n   * Populate the breadcrumb node.\n   */\n  export function updateCrumbs(\n    breadcrumbs: ReadonlyArray<HTMLElement>,\n    separators: ReadonlyArray<HTMLElement>,\n    path: string\n  ) {\n    let node = breadcrumbs[0].parentNode as HTMLElement;\n\n    // Remove all but the home node.\n    let firstChild = node.firstChild as HTMLElement;\n    while (firstChild && firstChild.nextSibling) {\n      node.removeChild(firstChild.nextSibling);\n    }\n\n    let parts = path.split('/');\n    if (parts.length > 2) {\n      node.appendChild(separators[0]);\n      node.appendChild(breadcrumbs[Crumb.Ellipsis]);\n      let grandParent = parts.slice(0, parts.length - 2).join('/');\n      breadcrumbs[Crumb.Ellipsis].title = grandParent;\n    }\n\n    if (path) {\n      if (parts.length >= 2) {\n        node.appendChild(separators[1]);\n        breadcrumbs[Crumb.Parent].textContent = parts[parts.length - 2];\n        node.appendChild(breadcrumbs[Crumb.Parent]);\n        let parent = parts.slice(0, parts.length - 1).join('/');\n        breadcrumbs[Crumb.Parent].title = parent;\n      }\n      node.appendChild(separators[2]);\n      breadcrumbs[Crumb.Current].textContent = parts[parts.length - 1];\n      node.appendChild(breadcrumbs[Crumb.Current]);\n      breadcrumbs[Crumb.Current].title = path;\n    }\n  }\n\n  /**\n   * Create the breadcrumb nodes.\n   */\n  export function createCrumbs(): ReadonlyArray<HTMLElement> {\n    let home = document.createElement('span');\n    home.className =\n      MATERIAL_CLASS + ' ' + BREADCRUMB_HOME + ' ' + BREADCRUMB_ITEM_CLASS;\n    home.title = 'Home';\n    let ellipsis = document.createElement('span');\n    ellipsis.className =\n      MATERIAL_CLASS + ' ' + BREADCRUMB_ELLIPSES + ' ' + BREADCRUMB_ITEM_CLASS;\n    let parent = document.createElement('span');\n    parent.className = BREADCRUMB_ITEM_CLASS;\n    let current = document.createElement('span');\n    current.className = BREADCRUMB_ITEM_CLASS;\n    return [home, ellipsis, parent, current];\n  }\n\n  /**\n   * Create the breadcrumb separator nodes.\n   */\n  export function createCrumbSeparators(): ReadonlyArray<HTMLElement> {\n    let items: HTMLElement[] = [];\n    for (let i = 0; i < 3; i++) {\n      let item = document.createElement('i');\n      item.className = 'fa fa-angle-right';\n      items.push(item);\n    }\n    return items;\n  }\n}\n"]}
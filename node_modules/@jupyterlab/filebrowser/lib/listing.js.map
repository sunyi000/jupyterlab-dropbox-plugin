{"version":3,"file":"listing.js","sourceRoot":"","sources":["../../../../filebrowser/src/listing.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  Dialog,\n  DOMUtils,\n  showDialog,\n  showErrorMessage\n} from '@jupyterlab/apputils';\n\nimport { PathExt, Time } from '@jupyterlab/coreutils';\n\nimport { DocumentRegistry } from '@jupyterlab/docregistry';\n\nimport {\n  IDocumentManager,\n  isValidFileName,\n  renameFile\n} from '@jupyterlab/docmanager';\n\nimport { Contents } from '@jupyterlab/services';\n\nimport {\n  ArrayExt,\n  ArrayIterator,\n  IIterator,\n  each,\n  filter,\n  find,\n  map,\n  toArray\n} from '@phosphor/algorithm';\n\nimport { MimeData, PromiseDelegate } from '@phosphor/coreutils';\n\nimport { Drag, IDragEvent } from '@phosphor/dragdrop';\n\nimport { ElementExt } from '@phosphor/domutils';\n\nimport { Message, MessageLoop } from '@phosphor/messaging';\n\nimport { Widget } from '@phosphor/widgets';\n\nimport { FileBrowserModel } from './model';\n\n/**\n * The class name added to DirListing widget.\n */\nconst DIR_LISTING_CLASS = 'jp-DirListing';\n\n/**\n * The class name added to a dir listing header node.\n */\nconst HEADER_CLASS = 'jp-DirListing-header';\n\n/**\n * The class name added to a dir listing list header cell.\n */\nconst HEADER_ITEM_CLASS = 'jp-DirListing-headerItem';\n\n/**\n * The class name added to a header cell text node.\n */\nconst HEADER_ITEM_TEXT_CLASS = 'jp-DirListing-headerItemText';\n\n/**\n * The class name added to a header cell icon node.\n */\nconst HEADER_ITEM_ICON_CLASS = 'jp-DirListing-headerItemIcon';\n\n/**\n * The class name added to the dir listing content node.\n */\nconst CONTENT_CLASS = 'jp-DirListing-content';\n\n/**\n * The class name added to dir listing content item.\n */\nconst ITEM_CLASS = 'jp-DirListing-item';\n\n/**\n * The class name added to the listing item text cell.\n */\nconst ITEM_TEXT_CLASS = 'jp-DirListing-itemText';\n\n/**\n * The class name added to the listing item icon cell.\n */\nconst ITEM_ICON_CLASS = 'jp-DirListing-itemIcon';\n\n/**\n * The class name added to the listing item modified cell.\n */\nconst ITEM_MODIFIED_CLASS = 'jp-DirListing-itemModified';\n\n/**\n * The class name added to the dir listing editor node.\n */\nconst EDITOR_CLASS = 'jp-DirListing-editor';\n\n/**\n * The class name added to the name column header cell.\n */\nconst NAME_ID_CLASS = 'jp-id-name';\n\n/**\n * The class name added to the modified column header cell.\n */\nconst MODIFIED_ID_CLASS = 'jp-id-modified';\n\n/**\n * The mime type for a con tents drag object.\n */\nconst CONTENTS_MIME = 'application/x-jupyter-icontents';\n\n/**\n * The class name added to drop targets.\n */\nconst DROP_TARGET_CLASS = 'jp-mod-dropTarget';\n\n/**\n * The class name added to selected rows.\n */\nconst SELECTED_CLASS = 'jp-mod-selected';\n\n/**\n * The class name added to drag state icons to add space between the icon and the file name\n */\nconst DRAG_ICON_CLASS = 'jp-DragIcon';\n\n/**\n * The class name added to the widget when there are items on the clipboard.\n */\nconst CLIPBOARD_CLASS = 'jp-mod-clipboard';\n\n/**\n * The class name added to cut rows.\n */\nconst CUT_CLASS = 'jp-mod-cut';\n\n/**\n * The class name added when there are more than one selected rows.\n */\nconst MULTI_SELECTED_CLASS = 'jp-mod-multiSelected';\n\n/**\n * The class name added to indicate running notebook.\n */\nconst RUNNING_CLASS = 'jp-mod-running';\n\n/**\n * The class name added for a decending sort.\n */\nconst DESCENDING_CLASS = 'jp-mod-descending';\n\n/**\n * The maximum duration between two key presses when selecting files by prefix.\n */\nconst PREFIX_APPEND_DURATION = 1000;\n\n/**\n * The threshold in pixels to start a drag event.\n */\nconst DRAG_THRESHOLD = 5;\n\n/**\n * A boolean indicating whether the platform is Mac.\n */\nconst IS_MAC = !!navigator.platform.match(/Mac/i);\n\n/**\n * The factory MIME type supported by phosphor dock panels.\n */\nconst FACTORY_MIME = 'application/vnd.phosphor.widget-factory';\n\n/**\n * A widget which hosts a file list area.\n */\nexport class DirListing extends Widget {\n  /**\n   * Construct a new file browser directory listing widget.\n   *\n   * @param model - The file browser view model.\n   */\n  constructor(options: DirListing.IOptions) {\n    super({\n      node: (options.renderer || DirListing.defaultRenderer).createNode()\n    });\n    this.addClass(DIR_LISTING_CLASS);\n    this._model = options.model;\n    this._model.fileChanged.connect(this._onFileChanged, this);\n    this._model.refreshed.connect(this._onModelRefreshed, this);\n    this._model.pathChanged.connect(this._onPathChanged, this);\n    this._editNode = document.createElement('input');\n    this._editNode.className = EDITOR_CLASS;\n    this._manager = this._model.manager;\n    this._renderer = options.renderer || DirListing.defaultRenderer;\n\n    const headerNode = DOMUtils.findElement(this.node, HEADER_CLASS);\n    this._renderer.populateHeaderNode(headerNode);\n    this._manager.activateRequested.connect(this._onActivateRequested, this);\n  }\n\n  /**\n   * Dispose of the resources held by the directory listing.\n   */\n  dispose(): void {\n    this._items.length = 0;\n    this._sortedItems.length = 0;\n    this._clipboard.length = 0;\n    super.dispose();\n  }\n\n  /**\n   * Get the model used by the listing.\n   */\n  get model(): FileBrowserModel {\n    return this._model;\n  }\n\n  /**\n   * Get the dir listing header node.\n   *\n   * #### Notes\n   * This is the node which holds the header cells.\n   *\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get headerNode(): HTMLElement {\n    return DOMUtils.findElement(this.node, HEADER_CLASS);\n  }\n\n  /**\n   * Get the dir listing content node.\n   *\n   * #### Notes\n   * This is the node which holds the item nodes.\n   *\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get contentNode(): HTMLElement {\n    return DOMUtils.findElement(this.node, CONTENT_CLASS);\n  }\n\n  /**\n   * The renderer instance used by the directory listing.\n   */\n  get renderer(): DirListing.IRenderer {\n    return this._renderer;\n  }\n\n  /**\n   * The current sort state.\n   */\n  get sortState(): DirListing.ISortState {\n    return this._sortState;\n  }\n\n  /**\n   * Create an iterator over the listing's selected items.\n   *\n   * @returns A new iterator over the listing's selected items.\n   */\n  selectedItems(): IIterator<Contents.IModel> {\n    let items = this._sortedItems;\n    return filter(items, item => this._selection[item.name]);\n  }\n\n  /**\n   * Create an iterator over the listing's sorted items.\n   *\n   * @returns A new iterator over the listing's sorted items.\n   */\n  sortedItems(): IIterator<Contents.IModel> {\n    return new ArrayIterator(this._sortedItems);\n  }\n\n  /**\n   * Sort the items using a sort condition.\n   */\n  sort(state: DirListing.ISortState): void {\n    this._sortedItems = Private.sort(this.model.items(), state);\n    this._sortState = state;\n    this.update();\n  }\n\n  /**\n   * Rename the first currently selected item.\n   *\n   * @returns A promise that resolves with the new name of the item.\n   */\n  rename(): Promise<string> {\n    return this._doRename();\n  }\n\n  /**\n   * Cut the selected items.\n   */\n  cut(): void {\n    this._isCut = true;\n    this._copy();\n    this.update();\n  }\n\n  /**\n   * Copy the selected items.\n   */\n  copy(): void {\n    this._copy();\n  }\n\n  /**\n   * Paste the items from the clipboard.\n   *\n   * @returns A promise that resolves when the operation is complete.\n   */\n  paste(): Promise<void> {\n    if (!this._clipboard.length) {\n      this._isCut = false;\n      return Promise.resolve(undefined);\n    }\n\n    const basePath = this._model.path;\n    let promises: Promise<Contents.IModel>[] = [];\n\n    each(this._clipboard, path => {\n      if (this._isCut) {\n        const parts = path.split('/');\n        const name = parts[parts.length - 1];\n        const newPath = PathExt.join(basePath, name);\n        promises.push(this._model.manager.rename(path, newPath));\n      } else {\n        promises.push(this._model.manager.copy(path, basePath));\n      }\n    });\n\n    // Remove any cut modifiers.\n    each(this._items, item => {\n      item.classList.remove(CUT_CLASS);\n    });\n\n    this._clipboard.length = 0;\n    this._isCut = false;\n    this.removeClass(CLIPBOARD_CLASS);\n    return Promise.all(promises)\n      .then(() => {\n        return undefined;\n      })\n      .catch(error => {\n        showErrorMessage('Paste Error', error);\n      });\n  }\n\n  /**\n   * Delete the currently selected item(s).\n   *\n   * @returns A promise that resolves when the operation is complete.\n   */\n  delete(): Promise<void> {\n    let names: string[] = [];\n    each(this._sortedItems, item => {\n      if (this._selection[item.name]) {\n        names.push(item.name);\n      }\n    });\n    let message = `Are you sure you want to permanently delete the ${\n      names.length\n    } files/folders selected?`;\n    if (names.length === 1) {\n      message = `Are you sure you want to permanently delete: ${names[0]}?`;\n    }\n    if (names.length) {\n      return showDialog({\n        title: 'Delete',\n        body: message,\n        buttons: [Dialog.cancelButton(), Dialog.warnButton({ label: 'DELETE' })]\n      }).then(result => {\n        if (!this.isDisposed && result.button.accept) {\n          return this._delete(names);\n        }\n      });\n    }\n    return Promise.resolve(void 0);\n  }\n\n  /**\n   * Duplicate the currently selected item(s).\n   *\n   * @returns A promise that resolves when the operation is complete.\n   */\n  duplicate(): Promise<void> {\n    const basePath = this._model.path;\n    let promises: Promise<Contents.IModel>[] = [];\n\n    each(this.selectedItems(), item => {\n      if (item.type !== 'directory') {\n        let oldPath = PathExt.join(basePath, item.name);\n        promises.push(this._model.manager.copy(oldPath, basePath));\n      }\n    });\n    return Promise.all(promises)\n      .then(() => {\n        return undefined;\n      })\n      .catch(error => {\n        showErrorMessage('Duplicate file', error);\n      });\n  }\n\n  /**\n   * Download the currently selected item(s).\n   */\n  download(): void {\n    each(this.selectedItems(), item => {\n      if (item.type !== 'directory') {\n        this._model.download(item.path);\n      }\n    });\n  }\n\n  /**\n   * Shut down kernels on the applicable currently selected items.\n   *\n   * @returns A promise that resolves when the operation is complete.\n   */\n  shutdownKernels(): Promise<void> {\n    const model = this._model;\n    const items = this._sortedItems;\n    const paths = items.map(item => item.path);\n\n    const promises = toArray(this._model.sessions())\n      .filter(session => {\n        let index = ArrayExt.firstIndexOf(paths, session.path);\n        return this._selection[items[index].name];\n      })\n      .map(session => model.manager.services.sessions.shutdown(session.id));\n\n    return Promise.all(promises)\n      .then(() => {\n        return undefined;\n      })\n      .catch(error => {\n        showErrorMessage('Shutdown kernel', error);\n      });\n  }\n\n  /**\n   * Select next item.\n   *\n   * @param keepExisting - Whether to keep the current selection and add to it.\n   */\n  selectNext(keepExisting = false): void {\n    let index = -1;\n    let selected = Object.keys(this._selection);\n    let items = this._sortedItems;\n    if (selected.length === 1 || keepExisting) {\n      // Select the next item.\n      let name = selected[selected.length - 1];\n      index = ArrayExt.findFirstIndex(items, value => value.name === name);\n      index += 1;\n      if (index === this._items.length) {\n        index = 0;\n      }\n    } else if (selected.length === 0) {\n      // Select the first item.\n      index = 0;\n    } else {\n      // Select the last selected item.\n      let name = selected[selected.length - 1];\n      index = ArrayExt.findFirstIndex(items, value => value.name === name);\n    }\n    if (index !== -1) {\n      this._selectItem(index, keepExisting);\n      ElementExt.scrollIntoViewIfNeeded(this.contentNode, this._items[index]);\n    }\n  }\n\n  /**\n   * Select previous item.\n   *\n   * @param keepExisting - Whether to keep the current selection and add to it.\n   */\n  selectPrevious(keepExisting = false): void {\n    let index = -1;\n    let selected = Object.keys(this._selection);\n    let items = this._sortedItems;\n    if (selected.length === 1 || keepExisting) {\n      // Select the previous item.\n      let name = selected[0];\n      index = ArrayExt.findFirstIndex(items, value => value.name === name);\n      index -= 1;\n      if (index === -1) {\n        index = this._items.length - 1;\n      }\n    } else if (selected.length === 0) {\n      // Select the last item.\n      index = this._items.length - 1;\n    } else {\n      // Select the first selected item.\n      let name = selected[0];\n      index = ArrayExt.findFirstIndex(items, value => value.name === name);\n    }\n    if (index !== -1) {\n      this._selectItem(index, keepExisting);\n      ElementExt.scrollIntoViewIfNeeded(this.contentNode, this._items[index]);\n    }\n  }\n\n  /**\n   * Select the first item that starts with prefix being typed.\n   */\n  selectByPrefix(): void {\n    const prefix = this._searchPrefix;\n    let items = this._sortedItems;\n\n    let index = ArrayExt.findFirstIndex(items, value => {\n      return value.name.toLowerCase().substr(0, prefix.length) === prefix;\n    });\n\n    if (index !== -1) {\n      this._selectItem(index, false);\n      ElementExt.scrollIntoViewIfNeeded(this.contentNode, this._items[index]);\n    }\n  }\n\n  /**\n   * Get whether an item is selected by name.\n   *\n   * @param name - The name of of the item.\n   *\n   * @returns Whether the item is selected.\n   */\n  isSelected(name: string): boolean {\n    return this._selection[name] === true;\n  }\n\n  /**\n   * Find a model given a click.\n   *\n   * @param event - The mouse event.\n   *\n   * @returns The model for the selected file.\n   */\n  modelForClick(event: MouseEvent): Contents.IModel | undefined {\n    let items = this._sortedItems;\n    let index = Private.hitTestNodes(this._items, event.clientX, event.clientY);\n    if (index !== -1) {\n      return items[index];\n    }\n    return undefined;\n  }\n\n  /**\n   * Select an item by name.\n   *\n   * @parem name - The name of the item to select.\n   *\n   * @returns A promise that resolves when the name is selected.\n   */\n  selectItemByName(name: string): Promise<void> {\n    // Make sure the file is available.\n    return this.model.refresh().then(() => {\n      if (this.isDisposed) {\n        throw new Error('File browser is disposed.');\n      }\n      let items = this._sortedItems;\n      let index = ArrayExt.findFirstIndex(items, value => value.name === name);\n      if (index === -1) {\n        throw new Error('Item does not exist.');\n      }\n      this._selectItem(index, false);\n      MessageLoop.sendMessage(this, Widget.Msg.UpdateRequest);\n      ElementExt.scrollIntoViewIfNeeded(this.contentNode, this._items[index]);\n    });\n  }\n\n  /**\n   * Handle the DOM events for the directory listing.\n   *\n   * @param event - The DOM event sent to the widget.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the panel's DOM node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'mousedown':\n        this._evtMousedown(event as MouseEvent);\n        break;\n      case 'mouseup':\n        this._evtMouseup(event as MouseEvent);\n        break;\n      case 'mousemove':\n        this._evtMousemove(event as MouseEvent);\n        break;\n      case 'keydown':\n        this._evtKeydown(event as KeyboardEvent);\n        break;\n      case 'click':\n        this._evtClick(event as MouseEvent);\n        break;\n      case 'dblclick':\n        this._evtDblClick(event as MouseEvent);\n        break;\n      case 'dragenter':\n      case 'dragover':\n        this.addClass('jp-mod-native-drop');\n        event.preventDefault();\n        break;\n      case 'dragleave':\n      case 'dragend':\n        this.removeClass('jp-mod-native-drop');\n        break;\n      case 'drop':\n        this.removeClass('jp-mod-native-drop');\n        this._evtNativeDrop(event as DragEvent);\n        break;\n      case 'scroll':\n        this._evtScroll(event as MouseEvent);\n        break;\n      case 'p-dragenter':\n        this._evtDragEnter(event as IDragEvent);\n        break;\n      case 'p-dragleave':\n        this._evtDragLeave(event as IDragEvent);\n        break;\n      case 'p-dragover':\n        this._evtDragOver(event as IDragEvent);\n        break;\n      case 'p-drop':\n        this._evtDrop(event as IDragEvent);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'after-attach'` message.\n   */\n  protected onAfterAttach(msg: Message): void {\n    super.onAfterAttach(msg);\n    let node = this.node;\n    let content = DOMUtils.findElement(node, CONTENT_CLASS);\n    node.addEventListener('mousedown', this);\n    node.addEventListener('keydown', this);\n    node.addEventListener('click', this);\n    node.addEventListener('dblclick', this);\n    content.addEventListener('dragenter', this);\n    content.addEventListener('dragover', this);\n    content.addEventListener('dragleave', this);\n    content.addEventListener('dragend', this);\n    content.addEventListener('drop', this);\n    content.addEventListener('scroll', this);\n    content.addEventListener('p-dragenter', this);\n    content.addEventListener('p-dragleave', this);\n    content.addEventListener('p-dragover', this);\n    content.addEventListener('p-drop', this);\n  }\n\n  /**\n   * A message handler invoked on a `'before-detach'` message.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    super.onBeforeDetach(msg);\n    let node = this.node;\n    let content = DOMUtils.findElement(node, CONTENT_CLASS);\n    node.removeEventListener('mousedown', this);\n    node.removeEventListener('keydown', this);\n    node.removeEventListener('click', this);\n    node.removeEventListener('dblclick', this);\n    content.removeEventListener('scroll', this);\n    content.removeEventListener('dragover', this);\n    content.removeEventListener('dragover', this);\n    content.removeEventListener('dragleave', this);\n    content.removeEventListener('dragend', this);\n    content.removeEventListener('drop', this);\n    content.removeEventListener('p-dragenter', this);\n    content.removeEventListener('p-dragleave', this);\n    content.removeEventListener('p-dragover', this);\n    content.removeEventListener('p-drop', this);\n    document.removeEventListener('mousemove', this, true);\n    document.removeEventListener('mouseup', this, true);\n  }\n\n  /**\n   * A message handler invoked on an `'after-show'` message.\n   */\n  protected onAfterShow(msg: Message): void {\n    if (this._isDirty) {\n      // Update the sorted items.\n      this.sort(this.sortState);\n      this.update();\n    }\n  }\n\n  /**\n   * A handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    this._isDirty = false;\n\n    // Fetch common variables.\n    let items = this._sortedItems;\n    let nodes = this._items;\n    let content = DOMUtils.findElement(this.node, CONTENT_CLASS);\n    let renderer = this._renderer;\n\n    this.removeClass(MULTI_SELECTED_CLASS);\n    this.removeClass(SELECTED_CLASS);\n\n    // Remove any excess item nodes.\n    while (nodes.length > items.length) {\n      content.removeChild(nodes.pop());\n    }\n\n    // Add any missing item nodes.\n    while (nodes.length < items.length) {\n      let node = renderer.createItemNode();\n      node.classList.add(ITEM_CLASS);\n      nodes.push(node);\n      content.appendChild(node);\n    }\n\n    // Remove extra classes from the nodes.\n    nodes.forEach(item => {\n      item.classList.remove(SELECTED_CLASS);\n      item.classList.remove(RUNNING_CLASS);\n      item.classList.remove(CUT_CLASS);\n    });\n\n    // Add extra classes to item nodes based on widget state.\n    items.forEach((item, i) => {\n      let node = nodes[i];\n      let ft = this._manager.registry.getFileTypeForModel(item);\n      renderer.updateItemNode(node, item, ft);\n      if (this._selection[item.name]) {\n        node.classList.add(SELECTED_CLASS);\n        if (this._isCut && this._model.path === this._prevPath) {\n          node.classList.add(CUT_CLASS);\n        }\n      }\n    });\n\n    // Handle the selectors on the widget node.\n    let selected = Object.keys(this._selection).length;\n    if (selected) {\n      this.addClass(SELECTED_CLASS);\n      if (selected > 1) {\n        this.addClass(MULTI_SELECTED_CLASS);\n      }\n    }\n\n    // Handle file session statuses.\n    let paths = items.map(item => item.path);\n    each(this._model.sessions(), session => {\n      let index = ArrayExt.firstIndexOf(paths, session.path);\n      let node = nodes[index];\n      let name = session.kernel.name;\n      let specs = this._model.specs;\n\n      node.classList.add(RUNNING_CLASS);\n      if (specs) {\n        name = specs.kernelspecs[name].display_name;\n      }\n      node.title = `${node.title}\\nKernel: ${name}`;\n    });\n\n    this._prevPath = this._model.path;\n  }\n\n  /**\n   * Handle the `'click'` event for the widget.\n   */\n  private _evtClick(event: MouseEvent) {\n    let target = event.target as HTMLElement;\n\n    let header = this.headerNode;\n    if (header.contains(target)) {\n      let state = this.renderer.handleHeaderClick(header, event);\n      if (state) {\n        this.sort(state);\n      }\n      return;\n    }\n  }\n\n  /**\n   * Handle the `'scroll'` event for the widget.\n   */\n  private _evtScroll(event: MouseEvent): void {\n    this.headerNode.scrollLeft = this.contentNode.scrollLeft;\n  }\n\n  /**\n   * Handle the `'mousedown'` event for the widget.\n   */\n  private _evtMousedown(event: MouseEvent): void {\n    // Bail if clicking within the edit node\n    if (event.target === this._editNode) {\n      return;\n    }\n\n    // Blur the edit node if necessary.\n    if (this._editNode.parentNode) {\n      if (this._editNode !== (event.target as HTMLElement)) {\n        this._editNode.focus();\n        this._editNode.blur();\n        clearTimeout(this._selectTimer);\n      } else {\n        return;\n      }\n    }\n\n    let index = Private.hitTestNodes(this._items, event.clientX, event.clientY);\n    if (index === -1) {\n      return;\n    }\n    this._handleFileSelect(event);\n\n    if (event.button !== 0) {\n      clearTimeout(this._selectTimer);\n    }\n\n    // Check for clearing a context menu.\n    let newContext = (IS_MAC && event.ctrlKey) || event.button === 2;\n    if (newContext) {\n      return;\n    }\n\n    // Left mouse press for drag start.\n    if (event.button === 0) {\n      this._dragData = {\n        pressX: event.clientX,\n        pressY: event.clientY,\n        index: index\n      };\n      document.addEventListener('mouseup', this, true);\n      document.addEventListener('mousemove', this, true);\n    }\n  }\n\n  /**\n   * Handle the `'mouseup'` event for the widget.\n   */\n  private _evtMouseup(event: MouseEvent): void {\n    // Handle any soft selection from the previous mouse down.\n    if (this._softSelection) {\n      let altered = event.metaKey || event.shiftKey || event.ctrlKey;\n      // See if we need to clear the other selection.\n      if (!altered && event.button === 0) {\n        this._selection = Object.create(null);\n        this._selection[this._softSelection] = true;\n        this.update();\n      }\n      this._softSelection = '';\n    }\n    // Remove the drag listeners if necessary.\n    if (event.button !== 0 || !this._drag) {\n      document.removeEventListener('mousemove', this, true);\n      document.removeEventListener('mouseup', this, true);\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  /**\n   * Handle the `'mousemove'` event for the widget.\n   */\n  private _evtMousemove(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Bail if we are the one dragging.\n    if (this._drag || !this._dragData) {\n      return;\n    }\n\n    // Check for a drag initialization.\n    let data = this._dragData;\n    let dx = Math.abs(event.clientX - data.pressX);\n    let dy = Math.abs(event.clientY - data.pressY);\n    if (dx < DRAG_THRESHOLD && dy < DRAG_THRESHOLD) {\n      return;\n    }\n\n    this._startDrag(data.index, event.clientX, event.clientY);\n  }\n\n  /**\n   * Handle the `'keydown'` event for the widget.\n   */\n  private _evtKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case 13: // Enter\n        // Do nothing if any modifier keys are pressed.\n        if (event.ctrlKey || event.shiftKey || event.altKey || event.metaKey) {\n          return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n\n        let selected = Object.keys(this._selection);\n        let name = selected[0];\n        let items = this._sortedItems;\n        let i = ArrayExt.findFirstIndex(items, value => value.name === name);\n        if (i === -1) {\n          return;\n        }\n\n        let model = this._model;\n        let item = this._sortedItems[i];\n        if (item.type === 'directory') {\n          model\n            .cd(item.name)\n            .catch(error => showErrorMessage('Open directory', error));\n        } else {\n          let path = item.path;\n          this._manager.openOrReveal(path);\n        }\n\n        break;\n      case 38: // Up arrow\n        this.selectPrevious(event.shiftKey);\n        event.stopPropagation();\n        event.preventDefault();\n        break;\n      case 40: // Down arrow\n        this.selectNext(event.shiftKey);\n        event.stopPropagation();\n        event.preventDefault();\n        break;\n      default:\n        break;\n    }\n\n    // Detects printable characters typed by the user.\n    // Not all browsers support .key, but it discharges us from reconstructing\n    // characters from key codes.\n    if (!this._inRename && event.key !== undefined && event.key.length === 1) {\n      this._searchPrefix += event.key;\n\n      clearTimeout(this._searchPrefixTimer);\n      this._searchPrefixTimer = window.setTimeout(() => {\n        this._searchPrefix = '';\n      }, PREFIX_APPEND_DURATION);\n\n      this.selectByPrefix();\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Handle the `'dblclick'` event for the widget.\n   */\n  private _evtDblClick(event: MouseEvent): void {\n    // Do nothing if it's not a left mouse press.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Do nothing if any modifier keys are pressed.\n    if (event.ctrlKey || event.shiftKey || event.altKey || event.metaKey) {\n      return;\n    }\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    clearTimeout(this._selectTimer);\n    this._editNode.blur();\n\n    // Find a valid double click target.\n    let target = event.target as HTMLElement;\n    let i = ArrayExt.findFirstIndex(this._items, node => node.contains(target));\n    if (i === -1) {\n      return;\n    }\n\n    let model = this._model;\n    let item = this._sortedItems[i];\n    if (item.type === 'directory') {\n      model\n        .cd(item.name)\n        .catch(error => showErrorMessage('Open directory', error));\n    } else {\n      let path = item.path;\n      this._manager.openOrReveal(path);\n    }\n  }\n\n  /**\n   * Handle the `drop` event for the widget.\n   */\n  private _evtNativeDrop(event: DragEvent): void {\n    let files = event.dataTransfer.files;\n    if (files.length === 0) {\n      return;\n    }\n    event.preventDefault();\n    for (let i = 0; i < files.length; i++) {\n      this._model.upload(files[i]);\n    }\n  }\n\n  /**\n   * Handle the `'p-dragenter'` event for the widget.\n   */\n  private _evtDragEnter(event: IDragEvent): void {\n    if (event.mimeData.hasData(CONTENTS_MIME)) {\n      let index = Private.hitTestNodes(\n        this._items,\n        event.clientX,\n        event.clientY\n      );\n      if (index === -1) {\n        return;\n      }\n      let item = this._sortedItems[index];\n      if (item.type !== 'directory' || this._selection[item.name]) {\n        return;\n      }\n      let target = event.target as HTMLElement;\n      target.classList.add(DROP_TARGET_CLASS);\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Handle the `'p-dragleave'` event for the widget.\n   */\n  private _evtDragLeave(event: IDragEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    let dropTarget = DOMUtils.findElement(this.node, DROP_TARGET_CLASS);\n    if (dropTarget) {\n      dropTarget.classList.remove(DROP_TARGET_CLASS);\n    }\n  }\n\n  /**\n   * Handle the `'p-dragover'` event for the widget.\n   */\n  private _evtDragOver(event: IDragEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    event.dropAction = event.proposedAction;\n    let dropTarget = DOMUtils.findElement(this.node, DROP_TARGET_CLASS);\n    if (dropTarget) {\n      dropTarget.classList.remove(DROP_TARGET_CLASS);\n    }\n    let index = Private.hitTestNodes(this._items, event.clientX, event.clientY);\n    this._items[index].classList.add(DROP_TARGET_CLASS);\n  }\n\n  /**\n   * Handle the `'p-drop'` event for the widget.\n   */\n  private _evtDrop(event: IDragEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this._selectTimer);\n    if (event.proposedAction === 'none') {\n      event.dropAction = 'none';\n      return;\n    }\n    if (!event.mimeData.hasData(CONTENTS_MIME)) {\n      return;\n    }\n    event.dropAction = event.proposedAction;\n\n    let target = event.target as HTMLElement;\n    while (target && target.parentElement) {\n      if (target.classList.contains(DROP_TARGET_CLASS)) {\n        target.classList.remove(DROP_TARGET_CLASS);\n        break;\n      }\n      target = target.parentElement;\n    }\n\n    // Get the path based on the target node.\n    const index = ArrayExt.firstIndexOf(this._items, target);\n    const items = this._sortedItems;\n    let basePath = this._model.path;\n    if (items[index].type === 'directory') {\n      basePath = PathExt.join(basePath, items[index].name);\n    }\n    const manager = this._manager;\n\n    // Handle the items.\n    const promises: Promise<Contents.IModel | null>[] = [];\n    const paths = event.mimeData.getData(CONTENTS_MIME) as string[];\n    for (let path of paths) {\n      let localPath = manager.services.contents.localPath(path);\n      let name = PathExt.basename(localPath);\n      let newPath = PathExt.join(basePath, name);\n      // Skip files that are not moving.\n      if (newPath === path) {\n        continue;\n      }\n      promises.push(renameFile(manager, path, newPath));\n    }\n    Promise.all(promises).catch(error => {\n      showErrorMessage('Move Error', error);\n    });\n  }\n\n  /**\n   * Start a drag event.\n   */\n  private _startDrag(index: number, clientX: number, clientY: number): void {\n    let selectedNames = Object.keys(this._selection);\n    let source = this._items[index];\n    let items = this._sortedItems;\n    let item: Contents.IModel | undefined;\n\n    // If the source node is not selected, use just that node.\n    if (!source.classList.contains(SELECTED_CLASS)) {\n      item = items[index];\n      selectedNames = [item.name];\n    } else {\n      let name = selectedNames[0];\n      item = find(items, value => value.name === name);\n    }\n\n    if (!item) {\n      return;\n    }\n\n    // Create the drag image.\n    let ft = this._manager.registry.getFileTypeForModel(item);\n    let dragImage = this.renderer.createDragImage(\n      source,\n      selectedNames.length,\n      ft\n    );\n\n    // Set up the drag event.\n    this._drag = new Drag({\n      dragImage,\n      mimeData: new MimeData(),\n      supportedActions: 'move',\n      proposedAction: 'move'\n    });\n    let basePath = this._model.path;\n    let paths = toArray(\n      map(selectedNames, name => {\n        return PathExt.join(basePath, name);\n      })\n    );\n    this._drag.mimeData.setData(CONTENTS_MIME, paths);\n    if (item && item.type !== 'directory') {\n      const otherPaths = paths.slice(1).reverse();\n      this._drag.mimeData.setData(FACTORY_MIME, () => {\n        if (!item) {\n          return;\n        }\n        let path = item.path;\n        let widget = this._manager.findWidget(path);\n        if (!widget) {\n          widget = this._manager.open(item.path);\n        }\n        if (otherPaths.length) {\n          const firstWidgetPlaced = new PromiseDelegate<void>();\n          firstWidgetPlaced.promise.then(() => {\n            let prevWidget = widget;\n            otherPaths.forEach(path => {\n              const options: DocumentRegistry.IOpenOptions = {\n                ref: prevWidget.id,\n                mode: 'tab-after'\n              };\n              prevWidget = this._manager.openOrReveal(\n                path,\n                void 0,\n                void 0,\n                options\n              );\n              this._manager.openOrReveal(item.path);\n            });\n          });\n          firstWidgetPlaced.resolve(void 0);\n        }\n        return widget;\n      });\n    }\n\n    // Start the drag and remove the mousemove and mouseup listeners.\n    document.removeEventListener('mousemove', this, true);\n    document.removeEventListener('mouseup', this, true);\n    clearTimeout(this._selectTimer);\n    this._drag.start(clientX, clientY).then(action => {\n      this._drag = null;\n      clearTimeout(this._selectTimer);\n    });\n  }\n\n  /**\n   * Handle selection on a file node.\n   */\n  private _handleFileSelect(event: MouseEvent): void {\n    // Fetch common variables.\n    let items = this._sortedItems;\n    let index = Private.hitTestNodes(this._items, event.clientX, event.clientY);\n\n    clearTimeout(this._selectTimer);\n\n    if (index === -1) {\n      return;\n    }\n\n    // Clear any existing soft selection.\n    this._softSelection = '';\n\n    let name = items[index].name;\n    let selected = Object.keys(this._selection);\n\n    // Handle toggling.\n    if ((IS_MAC && event.metaKey) || (!IS_MAC && event.ctrlKey)) {\n      if (this._selection[name]) {\n        delete this._selection[name];\n      } else {\n        this._selection[name] = true;\n      }\n\n      // Handle multiple select.\n    } else if (event.shiftKey) {\n      this._handleMultiSelect(selected, index);\n\n      // Handle a 'soft' selection\n    } else if (name in this._selection && selected.length > 1) {\n      this._softSelection = name;\n\n      // Default to selecting the only the item.\n    } else {\n      // Select only the given item.\n      this._selection = Object.create(null);\n      this._selection[name] = true;\n    }\n    this.update();\n  }\n\n  /**\n   * Handle a multiple select on a file item node.\n   */\n  private _handleMultiSelect(selected: string[], index: number): void {\n    // Find the \"nearest selected\".\n    let items = this._sortedItems;\n    let nearestIndex = -1;\n    for (let i = 0; i < this._items.length; i++) {\n      if (i === index) {\n        continue;\n      }\n      let name = items[i].name;\n      if (selected.indexOf(name) !== -1) {\n        if (nearestIndex === -1) {\n          nearestIndex = i;\n        } else {\n          if (Math.abs(index - i) < Math.abs(nearestIndex - i)) {\n            nearestIndex = i;\n          }\n        }\n      }\n    }\n\n    // Default to the first element (and fill down).\n    if (nearestIndex === -1) {\n      nearestIndex = 0;\n    }\n\n    // Select the rows between the current and the nearest selected.\n    for (let i = 0; i < this._items.length; i++) {\n      if (\n        (nearestIndex >= i && index <= i) ||\n        (nearestIndex <= i && index >= i)\n      ) {\n        this._selection[items[i].name] = true;\n      }\n    }\n  }\n\n  /**\n   * Copy the selected items, and optionally cut as well.\n   */\n  private _copy(): void {\n    this._clipboard.length = 0;\n    each(this.selectedItems(), item => {\n      this._clipboard.push(item.path);\n    });\n  }\n\n  /**\n   * Delete the files with the given names.\n   */\n  private _delete(names: string[]): Promise<void> {\n    const promises: Promise<void>[] = [];\n    const basePath = this._model.path;\n    for (let name of names) {\n      let newPath = PathExt.join(basePath, name);\n      let promise = this._model.manager.deleteFile(newPath).catch(err => {\n        showErrorMessage('Delete Failed', err);\n      });\n      promises.push(promise);\n    }\n    return Promise.all(promises).then(() => undefined);\n  }\n\n  /**\n   * Allow the user to rename item on a given row.\n   */\n  private _doRename(): Promise<string> {\n    this._inRename = true;\n    let items = this._sortedItems;\n    let name = Object.keys(this._selection)[0];\n    let index = ArrayExt.findFirstIndex(items, value => value.name === name);\n    let row = this._items[index];\n    let item = items[index];\n    let nameNode = this.renderer.getNameNode(row);\n    let original = item.name;\n    this._editNode.value = original;\n    this._selectItem(index, false);\n\n    return Private.doRename(nameNode, this._editNode).then(newName => {\n      if (!newName || newName === original) {\n        this._inRename = false;\n        return original;\n      }\n      if (!isValidFileName(newName)) {\n        showErrorMessage(\n          'Rename Error',\n          Error(\n            `\"${newName}\" is not a valid name for a file. ` +\n              `Names must have nonzero length, ` +\n              `and cannot include \"/\", \"\\\\\", or \":\"`\n          )\n        );\n        this._inRename = false;\n        return original;\n      }\n\n      if (this.isDisposed) {\n        this._inRename = false;\n        throw new Error('File browser is disposed.');\n      }\n\n      const manager = this._manager;\n      const oldPath = PathExt.join(this._model.path, original);\n      const newPath = PathExt.join(this._model.path, newName);\n      const promise = renameFile(manager, oldPath, newPath);\n      return promise\n        .catch(error => {\n          if (error !== 'File not renamed') {\n            showErrorMessage('Rename Error', error);\n          }\n          this._inRename = false;\n          return original;\n        })\n        .then(() => {\n          if (this.isDisposed) {\n            this._inRename = false;\n            throw new Error('File browser is disposed.');\n          }\n          if (this._inRename) {\n            // No need to catch because `newName` will always exit.\n            this.selectItemByName(newName);\n          }\n          this._inRename = false;\n          return newName;\n        });\n    });\n  }\n\n  /**\n   * Select a given item.\n   */\n  private _selectItem(index: number, keepExisting: boolean) {\n    // Selected the given row(s)\n    let items = this._sortedItems;\n    if (!keepExisting) {\n      this._selection = Object.create(null);\n    }\n    let name = items[index].name;\n    this._selection[name] = true;\n    this.update();\n  }\n\n  /**\n   * Handle the `refreshed` signal from the model.\n   */\n  private _onModelRefreshed(): void {\n    // Update the selection.\n    let existing = Object.keys(this._selection);\n    this._selection = Object.create(null);\n    each(this._model.items(), item => {\n      let name = item.name;\n      if (existing.indexOf(name) !== -1) {\n        this._selection[name] = true;\n      }\n    });\n    if (this.isVisible) {\n      // Update the sorted items.\n      this.sort(this.sortState);\n    } else {\n      this._isDirty = true;\n    }\n  }\n\n  /**\n   * Handle a `pathChanged` signal from the model.\n   */\n  private _onPathChanged(): void {\n    // Reset the selection.\n    this._selection = Object.create(null);\n    // Update the sorted items.\n    this.sort(this.sortState);\n  }\n\n  /**\n   * Handle a `fileChanged` signal from the model.\n   */\n  private _onFileChanged(\n    sender: FileBrowserModel,\n    args: Contents.IChangedArgs\n  ) {\n    let newValue = args.newValue;\n    if (!newValue) {\n      return;\n    }\n\n    if (args.type !== 'new' || !name) {\n      return;\n    }\n\n    this.selectItemByName(name)\n      .then(() => {\n        if (!this.isDisposed && newValue.type === 'directory') {\n          this._doRename();\n        }\n      })\n      .catch(() => {\n        /* Ignore if file does not exist. */\n      });\n  }\n\n  /**\n   * Handle an `activateRequested` signal from the manager.\n   */\n  private _onActivateRequested(sender: IDocumentManager, args: string): void {\n    let dirname = PathExt.dirname(args);\n    if (dirname !== this._model.path) {\n      return;\n    }\n    let basename = PathExt.basename(args);\n    this.selectItemByName(basename).catch(() => {\n      /* Ignore if file does not exist. */\n    });\n  }\n\n  private _model: FileBrowserModel;\n  private _editNode: HTMLInputElement;\n  private _items: HTMLElement[] = [];\n  private _sortedItems: Contents.IModel[] = [];\n  private _sortState: DirListing.ISortState = {\n    direction: 'ascending',\n    key: 'name'\n  };\n  private _drag: Drag | null = null;\n  private _dragData: {\n    pressX: number;\n    pressY: number;\n    index: number;\n  } | null = null;\n  private _selectTimer = -1;\n  private _isCut = false;\n  private _prevPath = '';\n  private _clipboard: string[] = [];\n  private _manager: IDocumentManager;\n  private _softSelection = '';\n  private _selection: { [key: string]: boolean } = Object.create(null);\n  private _renderer: DirListing.IRenderer;\n  private _searchPrefix: string = '';\n  private _searchPrefixTimer = -1;\n  private _inRename = false;\n  private _isDirty = false;\n}\n\n/**\n * The namespace for the `DirListing` class statics.\n */\nexport namespace DirListing {\n  /**\n   * An options object for initializing a file browser directory listing.\n   */\n  export interface IOptions {\n    /**\n     * A file browser model instance.\n     */\n    model: FileBrowserModel;\n\n    /**\n     * A renderer for file items.\n     *\n     * The default is a shared `Renderer` instance.\n     */\n    renderer?: IRenderer;\n  }\n\n  /**\n   * A sort state.\n   */\n  export interface ISortState {\n    /**\n     * The direction of sort.\n     */\n    direction: 'ascending' | 'descending';\n\n    /**\n     * The sort key.\n     */\n    key: 'name' | 'last_modified';\n  }\n\n  /**\n   * The render interface for file browser listing options.\n   */\n  export interface IRenderer {\n    /**\n     * Create the DOM node for a dir listing.\n     */\n    createNode(): HTMLElement;\n\n    /**\n     * Populate and empty header node for a dir listing.\n     *\n     * @param node - The header node to populate.\n     */\n    populateHeaderNode(node: HTMLElement): void;\n\n    /**\n     * Handle a header click.\n     *\n     * @param node - A node populated by [[populateHeaderNode]].\n     *\n     * @param event - A click event on the node.\n     *\n     * @returns The sort state of the header after the click event.\n     */\n    handleHeaderClick(node: HTMLElement, event: MouseEvent): ISortState;\n\n    /**\n     * Create a new item node for a dir listing.\n     *\n     * @returns A new DOM node to use as a content item.\n     */\n    createItemNode(): HTMLElement;\n\n    /**\n     * Update an item node to reflect the current state of a model.\n     *\n     * @param node - A node created by [[createItemNode]].\n     *\n     * @param model - The model object to use for the item state.\n     *\n     * @param fileType - The file type of the item, if applicable.\n     */\n    updateItemNode(\n      node: HTMLElement,\n      model: Contents.IModel,\n      fileType?: DocumentRegistry.IFileType\n    ): void;\n\n    /**\n     * Get the node containing the file name.\n     *\n     * @param node - A node created by [[createItemNode]].\n     *\n     * @returns The node containing the file name.\n     */\n    getNameNode(node: HTMLElement): HTMLElement;\n\n    /**\n     * Create an appropriate drag image for an item.\n     *\n     * @param node - A node created by [[createItemNode]].\n     *\n     * @param count - The number of items being dragged.\n     *\n     * @param fileType - The file type of the item, if applicable.\n     *\n     * @returns An element to use as the drag image.\n     */\n    createDragImage(\n      node: HTMLElement,\n      count: number,\n      fileType?: DocumentRegistry.IFileType\n    ): HTMLElement;\n  }\n\n  /**\n   * The default implementation of an `IRenderer`.\n   */\n  export class Renderer implements IRenderer {\n    /**\n     * Create the DOM node for a dir listing.\n     */\n    createNode(): HTMLElement {\n      let node = document.createElement('div');\n      let header = document.createElement('div');\n      let content = document.createElement('ul');\n      content.className = CONTENT_CLASS;\n      header.className = HEADER_CLASS;\n      node.appendChild(header);\n      node.appendChild(content);\n      node.tabIndex = 1;\n      return node;\n    }\n\n    /**\n     * Populate and empty header node for a dir listing.\n     *\n     * @param node - The header node to populate.\n     */\n    populateHeaderNode(node: HTMLElement): void {\n      let name = this._createHeaderItemNode('Name');\n      let modified = this._createHeaderItemNode('Last Modified');\n      name.classList.add(NAME_ID_CLASS);\n      name.classList.add(SELECTED_CLASS);\n      modified.classList.add(MODIFIED_ID_CLASS);\n      node.appendChild(name);\n      node.appendChild(modified);\n    }\n\n    /**\n     * Handle a header click.\n     *\n     * @param node - A node populated by [[populateHeaderNode]].\n     *\n     * @param event - A click event on the node.\n     *\n     * @returns The sort state of the header after the click event.\n     */\n    handleHeaderClick(node: HTMLElement, event: MouseEvent): ISortState {\n      let name = DOMUtils.findElement(node, NAME_ID_CLASS);\n      let modified = DOMUtils.findElement(node, MODIFIED_ID_CLASS);\n      let state: ISortState = { direction: 'ascending', key: 'name' };\n      let target = event.target as HTMLElement;\n      if (name.contains(target)) {\n        if (name.classList.contains(SELECTED_CLASS)) {\n          if (!name.classList.contains(DESCENDING_CLASS)) {\n            state.direction = 'descending';\n            name.classList.add(DESCENDING_CLASS);\n          } else {\n            name.classList.remove(DESCENDING_CLASS);\n          }\n        } else {\n          name.classList.remove(DESCENDING_CLASS);\n        }\n        name.classList.add(SELECTED_CLASS);\n        modified.classList.remove(SELECTED_CLASS);\n        modified.classList.remove(DESCENDING_CLASS);\n        return state;\n      }\n      if (modified.contains(target)) {\n        state.key = 'last_modified';\n        if (modified.classList.contains(SELECTED_CLASS)) {\n          if (!modified.classList.contains(DESCENDING_CLASS)) {\n            state.direction = 'descending';\n            modified.classList.add(DESCENDING_CLASS);\n          } else {\n            modified.classList.remove(DESCENDING_CLASS);\n          }\n        } else {\n          modified.classList.remove(DESCENDING_CLASS);\n        }\n        modified.classList.add(SELECTED_CLASS);\n        name.classList.remove(SELECTED_CLASS);\n        name.classList.remove(DESCENDING_CLASS);\n        return state;\n      }\n      return state;\n    }\n\n    /**\n     * Create a new item node for a dir listing.\n     *\n     * @returns A new DOM node to use as a content item.\n     */\n    createItemNode(): HTMLElement {\n      let node = document.createElement('li');\n      let icon = document.createElement('span');\n      let text = document.createElement('span');\n      let modified = document.createElement('span');\n      icon.className = ITEM_ICON_CLASS;\n      text.className = ITEM_TEXT_CLASS;\n      modified.className = ITEM_MODIFIED_CLASS;\n      node.appendChild(icon);\n      node.appendChild(text);\n      node.appendChild(modified);\n      return node;\n    }\n\n    /**\n     * Update an item node to reflect the current state of a model.\n     *\n     * @param node - A node created by [[createItemNode]].\n     *\n     * @param model - The model object to use for the item state.\n     *\n     * @param fileType - The file type of the item, if applicable.\n     *\n     */\n    updateItemNode(\n      node: HTMLElement,\n      model: Contents.IModel,\n      fileType?: DocumentRegistry.IFileType\n    ): void {\n      let icon = DOMUtils.findElement(node, ITEM_ICON_CLASS);\n      let text = DOMUtils.findElement(node, ITEM_TEXT_CLASS);\n      let modified = DOMUtils.findElement(node, ITEM_MODIFIED_CLASS);\n\n      if (fileType) {\n        icon.textContent = fileType.iconLabel || '';\n        icon.className = `${ITEM_ICON_CLASS} ${fileType.iconClass || ''}`;\n      } else {\n        icon.textContent = '';\n        icon.className = ITEM_ICON_CLASS;\n      }\n\n      node.title = model.name;\n      // If an item is being edited currently, its text node is unavailable.\n      if (text) {\n        text.textContent = model.name;\n      }\n\n      let modText = '';\n      let modTitle = '';\n      if (model.last_modified) {\n        modText = Time.formatHuman(new Date(model.last_modified));\n        modTitle = Time.format(new Date(model.last_modified));\n      }\n      modified.textContent = modText;\n      modified.title = modTitle;\n    }\n\n    /**\n     * Get the node containing the file name.\n     *\n     * @param node - A node created by [[createItemNode]].\n     *\n     * @returns The node containing the file name.\n     */\n    getNameNode(node: HTMLElement): HTMLElement {\n      return DOMUtils.findElement(node, ITEM_TEXT_CLASS);\n    }\n\n    /**\n     * Create a drag image for an item.\n     *\n     * @param node - A node created by [[createItemNode]].\n     *\n     * @param count - The number of items being dragged.\n     *\n     * @param fileType - The file type of the item, if applicable.\n     *\n     * @returns An element to use as the drag image.\n     */\n    createDragImage(\n      node: HTMLElement,\n      count: number,\n      fileType?: DocumentRegistry.IFileType\n    ): HTMLElement {\n      let dragImage = node.cloneNode(true) as HTMLElement;\n      let modified = DOMUtils.findElement(dragImage, ITEM_MODIFIED_CLASS);\n      let icon = DOMUtils.findElement(dragImage, ITEM_ICON_CLASS);\n      dragImage.removeChild(modified as HTMLElement);\n\n      if (!fileType) {\n        icon.textContent = '';\n        icon.className = '';\n      } else {\n        icon.textContent = fileType.iconLabel || '';\n        icon.className = fileType.iconClass || '';\n      }\n      icon.classList.add(DRAG_ICON_CLASS);\n\n      if (count > 1) {\n        let nameNode = DOMUtils.findElement(dragImage, ITEM_TEXT_CLASS);\n        nameNode.textContent = count + ' Items';\n      }\n      return dragImage;\n    }\n\n    /**\n     * Create a node for a header item.\n     */\n    private _createHeaderItemNode(label: string): HTMLElement {\n      let node = document.createElement('div');\n      let text = document.createElement('span');\n      let icon = document.createElement('span');\n      node.className = HEADER_ITEM_CLASS;\n      text.className = HEADER_ITEM_TEXT_CLASS;\n      icon.className = HEADER_ITEM_ICON_CLASS;\n      text.textContent = label;\n      node.appendChild(text);\n      node.appendChild(icon);\n      return node;\n    }\n  }\n\n  /**\n   * The default `IRenderer` instance.\n   */\n  export const defaultRenderer = new Renderer();\n}\n\n/**\n * The namespace for the listing private data.\n */\nnamespace Private {\n  /**\n   * Handle editing text on a node.\n   *\n   * @returns Boolean indicating whether the name changed.\n   */\n  export function doRename(\n    text: HTMLElement,\n    edit: HTMLInputElement\n  ): Promise<string> {\n    let parent = text.parentElement as HTMLElement;\n    parent.replaceChild(edit, text);\n    edit.focus();\n    let index = edit.value.lastIndexOf('.');\n    if (index === -1) {\n      edit.setSelectionRange(0, edit.value.length);\n    } else {\n      edit.setSelectionRange(0, index);\n    }\n\n    return new Promise<string>((resolve, reject) => {\n      edit.onblur = () => {\n        parent.replaceChild(text, edit);\n        resolve(edit.value);\n      };\n      edit.onkeydown = (event: KeyboardEvent) => {\n        switch (event.keyCode) {\n          case 13: // Enter\n            event.stopPropagation();\n            event.preventDefault();\n            edit.blur();\n            break;\n          case 27: // Escape\n            event.stopPropagation();\n            event.preventDefault();\n            edit.blur();\n            break;\n          case 38: // Up arrow\n            event.stopPropagation();\n            event.preventDefault();\n            if (edit.selectionStart !== edit.selectionEnd) {\n              edit.selectionStart = edit.selectionEnd = 0;\n            }\n            break;\n          case 40: // Down arrow\n            event.stopPropagation();\n            event.preventDefault();\n            if (edit.selectionStart !== edit.selectionEnd) {\n              edit.selectionStart = edit.selectionEnd = edit.value.length;\n            }\n            break;\n          default:\n            break;\n        }\n      };\n    });\n  }\n\n  /**\n   * Sort a list of items by sort state as a new array.\n   */\n  export function sort(\n    items: IIterator<Contents.IModel>,\n    state: DirListing.ISortState\n  ): Contents.IModel[] {\n    let copy = toArray(items);\n\n    if (state.key === 'last_modified') {\n      // Sort by type and then by last modified.\n      copy.sort((a, b) => {\n        // Compare based on type.\n        let t1 = typeWeight(a);\n        let t2 = typeWeight(b);\n        if (t1 !== t2) {\n          return t1 < t2 ? -1 : 1; // Infinity safe\n        }\n\n        let valA = new Date(a.last_modified).getTime();\n        let valB = new Date(b.last_modified).getTime();\n\n        if (state.direction === 'descending') {\n          return valA - valB;\n        }\n        return valB - valA;\n      });\n    } else {\n      // Sort by type and then by name.\n      copy.sort((a, b) => {\n        // Compare based on type.\n        let t1 = typeWeight(a);\n        let t2 = typeWeight(b);\n        if (t1 !== t2) {\n          return t1 < t2 ? -1 : 1; // Infinity safe\n        }\n\n        // Compare by display name.\n        if (state.direction === 'descending') {\n          return b.name.localeCompare(a.name);\n        }\n        return a.name.localeCompare(b.name);\n      });\n    }\n\n    return copy;\n  }\n\n  /**\n   * Get the index of the node at a client position, or `-1`.\n   */\n  export function hitTestNodes(\n    nodes: HTMLElement[],\n    x: number,\n    y: number\n  ): number {\n    return ArrayExt.findFirstIndex(nodes, node =>\n      ElementExt.hitTest(node, x, y)\n    );\n  }\n\n  /**\n   * Weight a contents model by type.\n   */\n  function typeWeight(model: Contents.IModel): number {\n    switch (model.type) {\n      case 'directory':\n        return 0;\n      case 'notebook':\n        return 1;\n      case 'file':\n        return 2;\n      default:\n        return Infinity;\n    }\n  }\n}\n"]}
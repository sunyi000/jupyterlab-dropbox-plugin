{"version":3,"file":"factory.js","sourceRoot":"","sources":["../../../../filebrowser/src/factory.ts"],"names":[],"mappings":";AAAA,0CAA0C;AAC1C,2DAA2D;;AAQ3D,mDAA4C;AAI5C,oBAAoB;AACpB;;GAEG;AACU,QAAA,mBAAmB,GAAG,IAAI,iBAAK,CAC1C,6CAA6C,CAC9C,CAAC","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { InstanceTracker } from '@jupyterlab/apputils';\n\nimport { IStateDB } from '@jupyterlab/coreutils';\n\nimport { CommandRegistry } from '@phosphor/commands';\n\nimport { Token } from '@phosphor/coreutils';\n\nimport { FileBrowser } from './browser';\n\n/* tslint:disable */\n/**\n * The path tracker token.\n */\nexport const IFileBrowserFactory = new Token<IFileBrowserFactory>(\n  '@jupyterlab/filebrowser:IFileBrowserFactory'\n);\n/* tslint:enable */\n\n/**\n * The file browser factory interface.\n */\nexport interface IFileBrowserFactory {\n  /**\n   * Create a new file browser instance.\n   *\n   * @param id - The widget/DOM id of the file browser.\n   *\n   * @param options - The optional file browser configuration object.\n   *\n   * #### Notes\n   * The ID parameter is used to set the widget ID. It is also used as part of\n   * the unique key necessary to store the file browser's restoration data in\n   * the state database if that functionality is enabled.\n   *\n   * If, after the file browser has been generated by the factory, the ID of the\n   * resulting widget is changed by client code, the restoration functionality\n   * will not be disrupted as long as there are no ID collisions, i.e., as long\n   * as the initial ID passed into the factory is used for only one file browser\n   * instance.\n   */\n  createFileBrowser(\n    id: string,\n    options?: IFileBrowserFactory.IOptions\n  ): FileBrowser;\n\n  /**\n   * The instance tracker used by the factory to track file browsers.\n   */\n  readonly tracker: InstanceTracker<FileBrowser>;\n\n  /**\n   * The default file browser for the application.\n   */\n  defaultBrowser: FileBrowser;\n}\n\n/**\n * A namespace for file browser factory interfaces.\n */\nexport namespace IFileBrowserFactory {\n  /**\n   * The options for creating a file browser using a file browser factory.\n   *\n   * #### Notes\n   * In future versions of JupyterLab, some of these options may disappear,\n   * which is a backward-incompatible API change and will necessitate a new\n   * version release. This is because in future versions, there will likely be\n   * an application-wide notion of a singleton command registry and a singleton\n   * state database.\n   */\n  export interface IOptions {\n    /**\n     * The command registry used by the file browser.\n     *\n     * #### Notes\n     * If no command registry is provided, the application default will be used.\n     */\n    commands?: CommandRegistry;\n\n    /**\n     * An optional `Contents.IDrive` name for the model.\n     * If given, the model will prepend `driveName:` to\n     * all paths used in file operations.\n     */\n    driveName?: string;\n\n    /**\n     * The state database to use for saving file browser state and restoring it.\n     *\n     * #### Notes\n     * Unless the value `null` is set for this option, the application state\n     * database will be automatically passed in and used for state restoration.\n     */\n    state?: IStateDB | null;\n\n    /**\n     * The time interval for browser refreshing, in ms.\n     */\n    refreshInterval?: number;\n  }\n}\n"]}
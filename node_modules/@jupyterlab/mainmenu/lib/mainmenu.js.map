{"version":3,"file":"mainmenu.js","sourceRoot":"","sources":["../../../../mainmenu/src/mainmenu.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ArrayExt } from '@phosphor/algorithm';\n\nimport { CommandRegistry } from '@phosphor/commands';\n\nimport { Token } from '@phosphor/coreutils';\n\nimport { Menu, MenuBar } from '@phosphor/widgets';\n\nimport { IFileMenu, FileMenu } from './file';\n\nimport { IEditMenu, EditMenu } from './edit';\n\nimport { IHelpMenu, HelpMenu } from './help';\n\nimport { IKernelMenu, KernelMenu } from './kernel';\n\nimport { IRunMenu, RunMenu } from './run';\n\nimport { ISettingsMenu, SettingsMenu } from './settings';\n\nimport { IViewMenu, ViewMenu } from './view';\n\nimport { ITabsMenu, TabsMenu } from './tabs';\n\n/* tslint:disable */\n/**\n * The main menu token.\n */\nexport const IMainMenu = new Token<IMainMenu>('@jupyterlab/mainmenu:IMainMenu');\n/* tslint:enable */\n\n/**\n * The main menu interface.\n */\nexport interface IMainMenu {\n  /**\n   * Add a new menu to the main menu bar.\n   */\n  addMenu(menu: Menu, options?: IMainMenu.IAddOptions): void;\n\n  /**\n   * The application \"File\" menu.\n   */\n  readonly fileMenu: IFileMenu;\n\n  /**\n   * The application \"Edit\" menu.\n   */\n  readonly editMenu: IEditMenu;\n\n  /**\n   * The application \"View\" menu.\n   */\n  readonly viewMenu: IViewMenu;\n\n  /**\n   * The application \"Help\" menu.\n   */\n  readonly helpMenu: IHelpMenu;\n\n  /**\n   * The application \"Kernel\" menu.\n   */\n  readonly kernelMenu: IKernelMenu;\n\n  /**\n   * The application \"Run\" menu.\n   */\n  readonly runMenu: IRunMenu;\n\n  /**\n   * The application \"Settings\" menu.\n   */\n  readonly settingsMenu: ISettingsMenu;\n\n  /**\n   * The application \"Tabs\" menu.\n   */\n  readonly tabsMenu: ITabsMenu;\n}\n\n/**\n * The namespace for IMainMenu attached interfaces.\n */\nexport namespace IMainMenu {\n  /**\n   * The options used to add a menu to the main menu.\n   */\n  export interface IAddOptions {\n    /**\n     * The rank order of the menu among its siblings.\n     */\n    rank?: number;\n  }\n}\n\n/**\n * The main menu class.  It is intended to be used as a singleton.\n */\nexport class MainMenu extends MenuBar implements IMainMenu {\n  /**\n   * Construct the main menu bar.\n   */\n  constructor(commands: CommandRegistry) {\n    super();\n    this.editMenu = new EditMenu({ commands });\n    this.fileMenu = new FileMenu({ commands });\n    this.helpMenu = new HelpMenu({ commands });\n    this.kernelMenu = new KernelMenu({ commands });\n    this.runMenu = new RunMenu({ commands });\n    this.settingsMenu = new SettingsMenu({ commands });\n    this.viewMenu = new ViewMenu({ commands });\n    this.tabsMenu = new TabsMenu({ commands });\n\n    this.addMenu(this.fileMenu.menu, { rank: 0 });\n    this.addMenu(this.editMenu.menu, { rank: 1 });\n    this.addMenu(this.viewMenu.menu, { rank: 2 });\n    this.addMenu(this.runMenu.menu, { rank: 3 });\n    this.addMenu(this.kernelMenu.menu, { rank: 4 });\n    this.addMenu(this.tabsMenu.menu, { rank: 500 });\n    this.addMenu(this.settingsMenu.menu, { rank: 999 });\n    this.addMenu(this.helpMenu.menu, { rank: 1000 });\n  }\n\n  /**\n   * The application \"Edit\" menu.\n   */\n  readonly editMenu: EditMenu;\n\n  /**\n   * The application \"File\" menu.\n   */\n  readonly fileMenu: FileMenu;\n\n  /**\n   * The application \"Help\" menu.\n   */\n  readonly helpMenu: HelpMenu;\n\n  /**\n   * The application \"Kernel\" menu.\n   */\n  readonly kernelMenu: KernelMenu;\n\n  /**\n   * The application \"Run\" menu.\n   */\n  readonly runMenu: RunMenu;\n\n  /**\n   * The application \"Settings\" menu.\n   */\n  readonly settingsMenu: SettingsMenu;\n\n  /**\n   * The application \"View\" menu.\n   */\n  readonly viewMenu: ViewMenu;\n\n  /**\n   * The application \"Tabs\" menu.\n   */\n  readonly tabsMenu: TabsMenu;\n\n  /**\n   * Add a new menu to the main menu bar.\n   */\n  addMenu(menu: Menu, options: IMainMenu.IAddOptions = {}): void {\n    if (ArrayExt.firstIndexOf(this.menus, menu) > -1) {\n      return;\n    }\n\n    let rank = 'rank' in options ? options.rank : 100;\n    let rankItem = { menu, rank };\n    let index = ArrayExt.upperBound(this._items, rankItem, Private.itemCmp);\n\n    // Upon disposal, remove the menu and its rank reference.\n    menu.disposed.connect(this._onMenuDisposed, this);\n\n    ArrayExt.insert(this._items, index, rankItem);\n    /**\n     * Create a new menu.\n     */\n    this.insertMenu(index, menu);\n  }\n\n  /**\n   * Dispose of the resources held by the menu bar.\n   */\n  dispose(): void {\n    this.editMenu.dispose();\n    this.fileMenu.dispose();\n    this.helpMenu.dispose();\n    this.kernelMenu.dispose();\n    this.runMenu.dispose();\n    this.settingsMenu.dispose();\n    this.viewMenu.dispose();\n    this.tabsMenu.dispose();\n    super.dispose();\n  }\n\n  /**\n   * Handle the disposal of a menu.\n   */\n  private _onMenuDisposed(menu: Menu): void {\n    this.removeMenu(menu);\n    let index = ArrayExt.findFirstIndex(\n      this._items,\n      item => item.menu === menu\n    );\n    if (index !== -1) {\n      ArrayExt.removeAt(this._items, index);\n    }\n  }\n\n  private _items: Private.IRankItem[] = [];\n}\n\n/**\n * A namespace for private data.\n */\nnamespace Private {\n  /**\n   * An object which holds a menu and its sort rank.\n   */\n  export interface IRankItem {\n    /**\n     * The menu for the item.\n     */\n    menu: Menu;\n\n    /**\n     * The sort rank of the menu.\n     */\n    rank: number;\n  }\n\n  /**\n   * A comparator function for menu rank items.\n   */\n  export function itemCmp(first: IRankItem, second: IRankItem): number {\n    return first.rank - second.rank;\n  }\n}\n"]}
{"version":3,"file":"codemirror-ipython.js","sourceRoot":"","sources":["../../../../codemirror/src/codemirror-ipython.ts"],"names":[],"mappings":";AAAA,0CAA0C;AAC1C,2DAA2D;;;;;AAE3D,4DAAoC;AAEpC,gCAA8B;AAC9B,yCAAuC;AAEvC;;;;GAIG;AACH,oBAAU,CAAC,UAAU,CACnB,SAAS,EACT,CAAC,MAAsC,EAAE,WAAiB,EAAE,EAAE;IAC5D,IAAI,UAAU,GAAQ,EAAE,CAAC;IACzB,KAAK,IAAI,IAAI,IAAI,WAAW,EAAE;QAC5B,IAAI,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;YACpC,UAAU,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;SACtC;KACF;IACD,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;IAC3B,UAAU,CAAC,eAAe,GAAG,IAAI,MAAM,CAAC,6BAA6B,CAAC,CAAC;IACvE,UAAU,CAAC,WAAW,GAAG,IAAI,MAAM,CACjC,mDAAmD,CACpD,CAAC;IACF,OAAO,oBAAU,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AAChD,CAAC,EACD,QAAQ,CACT,CAAC;AAEF,oBAAU,CAAC,UAAU,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;AACnD,oBAAU,CAAC,QAAQ,CAAC,IAAI,CAAC;IACvB,GAAG,EAAE,EAAE;IACP,IAAI,EAAE,gBAAgB;IACtB,IAAI,EAAE,SAAS;IACf,IAAI,EAAE,SAAS;CAChB,CAAC,CAAC","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport CodeMirror from 'codemirror';\n\nimport 'codemirror/mode/meta';\nimport 'codemirror/mode/python/python';\n\n/**\n * Define an IPython codemirror mode.\n *\n * It is a slightly altered Python Mode with a `?` operator.\n */\nCodeMirror.defineMode(\n  'ipython',\n  (config: CodeMirror.EditorConfiguration, modeOptions?: any) => {\n    let pythonConf: any = {};\n    for (let prop in modeOptions) {\n      if (modeOptions.hasOwnProperty(prop)) {\n        pythonConf[prop] = modeOptions[prop];\n      }\n    }\n    pythonConf.name = 'python';\n    pythonConf.singleOperators = new RegExp('^[\\\\+\\\\-\\\\*/%&|@\\\\^~<>!\\\\?]');\n    pythonConf.identifiers = new RegExp(\n      '^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*'\n    );\n    return CodeMirror.getMode(config, pythonConf);\n  },\n  'python'\n);\n\nCodeMirror.defineMIME('text/x-ipython', 'ipython');\nCodeMirror.modeInfo.push({\n  ext: [],\n  mime: 'text/x-ipython',\n  mode: 'ipython',\n  name: 'ipython'\n});\n"]}
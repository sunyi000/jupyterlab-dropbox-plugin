{"version":3,"file":"dialogs.js","sourceRoot":"","sources":["../../../../docmanager/src/dialogs.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Dialog, showDialog, showErrorMessage } from '@jupyterlab/apputils';\n\nimport { PathExt } from '@jupyterlab/coreutils';\n\nimport { Contents } from '@jupyterlab/services';\n\nimport { JSONObject } from '@phosphor/coreutils';\n\nimport { Widget } from '@phosphor/widgets';\n\nimport { IDocumentManager } from './';\n\n/**\n * The class name added to file dialogs.\n */\nconst FILE_DIALOG_CLASS = 'jp-FileDialog';\n\n/**\n * The class name added for the new name label in the rename dialog\n */\nconst RENAME_NEWNAME_TITLE_CLASS = 'jp-new-name-title';\n\n/**\n * A stripped-down interface for a file container.\n */\nexport interface IFileContainer extends JSONObject {\n  /**\n   * The list of item names in the current working directory.\n   */\n  items: string[];\n  /**\n   * The current working directory of the file container.\n   */\n  path: string;\n}\n\n/**\n * Rename a file with a dialog.\n */\nexport function renameDialog(\n  manager: IDocumentManager,\n  oldPath: string\n): Promise<Contents.IModel | null> {\n  return showDialog({\n    title: 'Rename File',\n    body: new RenameHandler(oldPath),\n    focusNodeSelector: 'input',\n    buttons: [Dialog.cancelButton(), Dialog.okButton({ label: 'RENAME' })]\n  }).then(result => {\n    if (!isValidFileName(result.value)) {\n      showErrorMessage(\n        'Rename Error',\n        Error(\n          `\"${result.value}\" is not a valid name for a file. ` +\n            `Names must have nonzero length, ` +\n            `and cannot include \"/\", \"\\\\\", or \":\"`\n        )\n      );\n      return null;\n    }\n    let basePath = PathExt.dirname(oldPath);\n    let newPath = PathExt.join(basePath, result.value);\n    return renameFile(manager, oldPath, newPath);\n  });\n}\n\n/**\n * Rename a file, asking for confirmation if it is overwriting another.\n */\nexport function renameFile(\n  manager: IDocumentManager,\n  oldPath: string,\n  newPath: string\n): Promise<Contents.IModel | null> {\n  return manager.rename(oldPath, newPath).catch(error => {\n    if (error.message.indexOf('409') === -1) {\n      throw error;\n    }\n    return shouldOverwrite(newPath).then(value => {\n      if (value) {\n        return manager.overwrite(oldPath, newPath);\n      }\n      return Promise.reject('File not renamed');\n    });\n  });\n}\n\n/**\n * Ask the user whether to overwrite a file.\n */\nexport function shouldOverwrite(path: string): Promise<boolean> {\n  let options = {\n    title: 'Overwrite file?',\n    body: `\"${path}\" already exists, overwrite?`,\n    buttons: [Dialog.cancelButton(), Dialog.warnButton({ label: 'OVERWRITE' })]\n  };\n  return showDialog(options).then(result => {\n    return Promise.resolve(result.button.accept);\n  });\n}\n\n/**\n * Test whether a name is a valid file name\n *\n * Disallows \"/\", \"\\\", and \":\" in file names, as well as names with zero length.\n */\nexport function isValidFileName(name: string): boolean {\n  const validNameExp = /[\\/\\\\:]/;\n  return name.length > 0 && !validNameExp.test(name);\n}\n\n/**\n * A widget used to rename a file.\n */\nclass RenameHandler extends Widget {\n  /**\n   * Construct a new \"rename\" dialog.\n   */\n  constructor(oldPath: string) {\n    super({ node: Private.createRenameNode(oldPath) });\n    this.addClass(FILE_DIALOG_CLASS);\n    let ext = PathExt.extname(oldPath);\n    let value = (this.inputNode.value = PathExt.basename(oldPath));\n    this.inputNode.setSelectionRange(0, value.length - ext.length);\n  }\n\n  /**\n   * Get the input text node.\n   */\n  get inputNode(): HTMLInputElement {\n    return this.node.getElementsByTagName('input')[0] as HTMLInputElement;\n  }\n\n  /**\n   * Get the value of the widget.\n   */\n  getValue(): string {\n    return this.inputNode.value;\n  }\n}\n\n/*\n * A widget used to open a file directly.\n */\nclass OpenDirectWidget extends Widget {\n  /**\n   * Construct a new open file widget.\n   */\n  constructor() {\n    super({ node: Private.createOpenNode() });\n  }\n\n  /**\n   * Get the value of the widget.\n   */\n  getValue(): string {\n    return this.inputNode.value;\n  }\n\n  /**\n   * Get the input text node.\n   */\n  get inputNode(): HTMLInputElement {\n    return this.node.getElementsByTagName('input')[0] as HTMLInputElement;\n  }\n}\n\n/**\n * Create the node for the open handler.\n */\nexport function getOpenPath(contentsManager: any): Promise<string | undefined> {\n  return showDialog({\n    title: 'Open File',\n    body: new OpenDirectWidget(),\n    buttons: [Dialog.cancelButton(), Dialog.okButton({ label: 'OPEN' })],\n    focusNodeSelector: 'input'\n  }).then((result: any) => {\n    if (result.button.label === 'OPEN') {\n      return result.value;\n    }\n    return;\n  });\n}\n\n/**\n * A namespace for private data.\n */\nnamespace Private {\n  /**\n   * Create the node for a rename handler.\n   */\n  export function createRenameNode(oldPath: string): HTMLElement {\n    let body = document.createElement('div');\n    let existingLabel = document.createElement('label');\n    existingLabel.textContent = 'File Path';\n    let existingPath = document.createElement('span');\n    existingPath.textContent = oldPath;\n\n    let nameTitle = document.createElement('label');\n    nameTitle.textContent = 'New Name';\n    nameTitle.className = RENAME_NEWNAME_TITLE_CLASS;\n    let name = document.createElement('input');\n\n    body.appendChild(existingLabel);\n    body.appendChild(existingPath);\n    body.appendChild(nameTitle);\n    body.appendChild(name);\n    return body;\n  }\n\n  /**\n   * Create the node for a open widget.\n   */\n  export function createOpenNode(): HTMLElement {\n    let body = document.createElement('div');\n    let existingLabel = document.createElement('label');\n    existingLabel.textContent = 'File Path:';\n\n    let input = document.createElement('input');\n    input.value = '';\n    input.placeholder = '/path/to/file';\n\n    body.appendChild(existingLabel);\n    body.appendChild(input);\n    return body;\n  }\n}\n"]}
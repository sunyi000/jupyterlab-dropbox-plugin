{"version":3,"file":"commandpalette.js","sourceRoot":"","sources":["../../../../apputils/src/commandpalette.ts"],"names":[],"mappings":";AAAA;;;+EAG+E;;AAE/E,mDAA4C;AAM5C,oBAAoB;AACpB;;GAEG;AACU,QAAA,eAAe,GAAG,IAAI,iBAAK,CACtC,sCAAsC,CACvC,CAAC","sourcesContent":["/*-----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n\nimport { Token } from '@phosphor/coreutils';\n\nimport { IDisposable } from '@phosphor/disposable';\n\nimport { CommandPalette } from '@phosphor/widgets';\n\n/* tslint:disable */\n/**\n * The command palette token.\n */\nexport const ICommandPalette = new Token<ICommandPalette>(\n  '@jupyterlab/apputils:ICommandPalette'\n);\n/* tslint:enable */\n\n/**\n * The options for creating a command palette item.\n */\nexport interface IPaletteItem extends CommandPalette.IItemOptions {}\n\n/**\n * The interface for a Jupyter Lab command palette.\n */\nexport interface ICommandPalette {\n  /**\n   * The placeholder text of the command palette's search input.\n   */\n  placeholder: string;\n\n  /**\n   * Activate the command palette for user input.\n   */\n  activate(): void;\n\n  /**\n   * Add a command item to the command palette.\n   *\n   * @param options - The options for creating the command item.\n   *\n   * @returns A disposable that will remove the item from the palette.\n   */\n  addItem(options: IPaletteItem): IDisposable;\n}\n"]}
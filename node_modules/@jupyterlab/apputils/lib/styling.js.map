{"version":3,"file":"styling.js","sourceRoot":"","sources":["../../../../apputils/src/styling.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n/**\n * A namespace for node styling.\n */\nexport namespace Styling {\n  /**\n   * Style a node and its child elements with the default tag names.\n   *\n   * @param node - The base node.\n   *\n   * @param className - The optional CSS class to add to styled nodes.\n   */\n  export function styleNode(node: HTMLElement, className = ''): void {\n    styleNodeByTag(node, 'select', className);\n    styleNodeByTag(node, 'textarea', className);\n    styleNodeByTag(node, 'input', className);\n    styleNodeByTag(node, 'button', className);\n  }\n\n  /**\n   * Style a node and its elements that have a given tag name.\n   *\n   * @param node - The base node.\n   *\n   * @param tagName - The html tag name to style.\n   *\n   * @param className - The optional CSS class to add to styled nodes.\n   */\n  export function styleNodeByTag(\n    node: HTMLElement,\n    tagName: string,\n    className = ''\n  ): void {\n    if (node.localName === tagName) {\n      node.classList.add('jp-mod-styled');\n    }\n    if (node.localName === 'select') {\n      wrapSelect(node as HTMLSelectElement);\n    }\n    let nodes = node.getElementsByTagName(tagName);\n    for (let i = 0; i < nodes.length; i++) {\n      let child = nodes[i];\n      child.classList.add('jp-mod-styled');\n      if (className) {\n        child.classList.add(className);\n      }\n      if (tagName === 'select') {\n        wrapSelect(child as HTMLSelectElement);\n      }\n    }\n  }\n\n  /**\n   * Wrap a select node.\n   */\n  export function wrapSelect(node: HTMLSelectElement): HTMLElement {\n    let wrapper = document.createElement('div');\n    wrapper.classList.add('jp-select-wrapper');\n    node.addEventListener('focus', Private.onFocus);\n    node.addEventListener('blur', Private.onFocus);\n    node.classList.add('jp-mod-styled');\n    if (node.parentElement) {\n      node.parentElement.replaceChild(wrapper, node);\n    }\n    wrapper.appendChild(node);\n    return wrapper;\n  }\n}\n\n/**\n * The namespace for module private data.\n */\nnamespace Private {\n  /**\n   * Handle a focus event on a styled select.\n   */\n  export function onFocus(event: FocusEvent): void {\n    let target = event.target as Element;\n    let parent = target.parentElement;\n    if (!parent) {\n      return;\n    }\n    if (event.type === 'focus') {\n      parent.classList.add('jp-mod-focused');\n    } else {\n      parent.classList.remove('jp-mod-focused');\n    }\n  }\n}\n"]}
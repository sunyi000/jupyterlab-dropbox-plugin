{"version":3,"file":"jsoneditor.js","sourceRoot":"","sources":["../../../../codeeditor/src/jsoneditor.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IObservableJSON } from '@jupyterlab/observables';\n\nimport { JSONExt, JSONObject } from '@phosphor/coreutils';\n\nimport { Message } from '@phosphor/messaging';\n\nimport { Widget } from '@phosphor/widgets';\n\nimport * as React from 'react';\n\nimport * as ReactDOM from 'react-dom';\n\nimport { CodeEditor } from './editor';\n\n/**\n * The class name added to a JSONEditor instance.\n */\nconst JSONEDITOR_CLASS = 'jp-JSONEditor';\n\n/**\n * The class name added when the Metadata editor contains invalid JSON.\n */\nconst ERROR_CLASS = 'jp-mod-error';\n\n/**\n * The class name added to the editor host node.\n */\nconst HOST_CLASS = 'jp-JSONEditor-host';\n\n/**\n * The class name added to the header area.\n */\nconst HEADER_CLASS = 'jp-JSONEditor-header';\n\n/**\n * The class name added to the title node.\n */\nconst TITLE_CLASS = 'jp-JSONEditor-title';\n\n/**\n * The class name added to the collapser node.\n */\nconst COLLAPSER_CLASS = 'jp-JSONEditor-collapser';\n\n/**\n * The class name added to the collapser node that is enabled.\n */\nconst COLLAPSE_ENABLED_CLASS = 'jp-mod-collapse-enabled';\n\n/**\n * The class name added to the revert button.\n */\nconst REVERT_CLASS = 'jp-JSONEditor-revertButton';\n\n/**\n * The class name added to the commit button.\n */\nconst COMMIT_CLASS = 'jp-JSONEditor-commitButton';\n\n/**\n * The class name added to collapsed items.\n */\nconst COLLAPSED_CLASS = 'jp-mod-collapsed';\n\n/**\n * A widget for editing observable JSON.\n */\nexport class JSONEditor extends Widget {\n  /**\n   * Construct a new JSON editor.\n   */\n  constructor(options: JSONEditor.IOptions) {\n    super();\n\n    this.addClass(JSONEDITOR_CLASS);\n    ReactDOM.render(Private.createEditorContent(options), this.node);\n\n    let host = this.editorHostNode;\n    let model = new CodeEditor.Model();\n\n    model.value.text = 'No data!';\n    model.mimeType = 'application/json';\n    model.value.changed.connect(this._onValueChanged, this);\n    this.model = model;\n    this.editor = options.editorFactory({ host, model });\n    this.editor.setOption('readOnly', true);\n    this.collapsible = !!options.collapsible;\n  }\n\n  /**\n   * The code editor used by the editor.\n   */\n  readonly editor: CodeEditor.IEditor;\n\n  /**\n   * The code editor model used by the editor.\n   */\n  readonly model: CodeEditor.IModel;\n\n  /**\n   * Whether the editor is collapsible.\n   */\n  readonly collapsible: boolean;\n\n  /**\n   * The title of the editor.\n   */\n  get editorTitle(): string {\n    return this.titleNode.textContent || '';\n  }\n  set editorTitle(value: string) {\n    this.titleNode.textContent = value;\n  }\n\n  /**\n   * Get the editor host node used by the JSON editor.\n   */\n  get editorHostNode(): HTMLElement {\n    return this.node.getElementsByClassName(HOST_CLASS)[0] as HTMLElement;\n  }\n\n  /**\n   * Get the header node used by the JSON editor.\n   */\n  get headerNode(): HTMLElement {\n    return this.node.getElementsByClassName(HEADER_CLASS)[0] as HTMLElement;\n  }\n\n  /**\n   * Get the title node used by the JSON editor.\n   */\n  get titleNode(): HTMLElement {\n    return this.node.getElementsByClassName(TITLE_CLASS)[0] as HTMLElement;\n  }\n\n  /**\n   * Get the collapser node used by the JSON editor.\n   */\n  get collapserNode(): HTMLElement {\n    return this.node.getElementsByClassName(COLLAPSER_CLASS)[0] as HTMLElement;\n  }\n\n  /**\n   * Get the revert button used by the JSON editor.\n   */\n  get revertButtonNode(): HTMLElement {\n    return this.node.getElementsByClassName(REVERT_CLASS)[0] as HTMLElement;\n  }\n\n  /**\n   * Get the commit button used by the JSON editor.\n   */\n  get commitButtonNode(): HTMLElement {\n    return this.node.getElementsByClassName(COMMIT_CLASS)[0] as HTMLElement;\n  }\n\n  /**\n   * The observable source.\n   */\n  get source(): IObservableJSON | null {\n    return this._source;\n  }\n  set source(value: IObservableJSON | null) {\n    if (this._source === value) {\n      return;\n    }\n    if (this._source) {\n      this._source.changed.disconnect(this._onSourceChanged, this);\n    }\n    this._source = value;\n    this.editor.setOption('readOnly', value === null);\n    if (value) {\n      value.changed.connect(this._onSourceChanged, this);\n    }\n    this._setValue();\n  }\n\n  /**\n   * Get whether the editor is dirty.\n   */\n  get isDirty(): boolean {\n    return this._dataDirty || this._inputDirty;\n  }\n\n  /**\n   * Handle the DOM events for the widget.\n   *\n   * @param event - The DOM event sent to the widget.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the notebook panel's node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'blur':\n        this._evtBlur(event as FocusEvent);\n        break;\n      case 'click':\n        this._evtClick(event as MouseEvent);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Handle `after-attach` messages for the widget.\n   */\n  protected onAfterAttach(msg: Message): void {\n    let node = this.editorHostNode;\n    node.addEventListener('blur', this, true);\n    node.addEventListener('click', this, true);\n    this.revertButtonNode.hidden = true;\n    this.commitButtonNode.hidden = true;\n    this.headerNode.addEventListener('click', this);\n    if (this.isVisible) {\n      this.update();\n    }\n  }\n\n  /**\n   * Handle `after-show` messages for the widget.\n   */\n  protected onAfterShow(msg: Message): void {\n    this.update();\n  }\n\n  /**\n   * Handle `update-request` messages for the widget.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    this.editor.refresh();\n  }\n\n  /**\n   * Handle `before-detach` messages for the widget.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    let node = this.editorHostNode;\n    node.removeEventListener('blur', this, true);\n    node.removeEventListener('click', this, true);\n    this.headerNode.removeEventListener('click', this);\n  }\n\n  /**\n   * Handle a change to the metadata of the source.\n   */\n  private _onSourceChanged(\n    sender: IObservableJSON,\n    args: IObservableJSON.IChangedArgs\n  ) {\n    if (this._changeGuard) {\n      return;\n    }\n    if (this._inputDirty || this.editor.hasFocus()) {\n      this._dataDirty = true;\n      return;\n    }\n    this._setValue();\n  }\n\n  /**\n   * Handle change events.\n   */\n  private _onValueChanged(): void {\n    let valid = true;\n    try {\n      let value = JSON.parse(this.editor.model.value.text);\n      this.removeClass(ERROR_CLASS);\n      this._inputDirty =\n        !this._changeGuard && !JSONExt.deepEqual(value, this._originalValue);\n    } catch (err) {\n      this.addClass(ERROR_CLASS);\n      this._inputDirty = true;\n      valid = false;\n    }\n    this.revertButtonNode.hidden = !this._inputDirty;\n    this.commitButtonNode.hidden = !valid || !this._inputDirty;\n  }\n\n  /**\n   * Handle blur events for the text area.\n   */\n  private _evtBlur(event: FocusEvent): void {\n    // Update the metadata if necessary.\n    if (!this._inputDirty && this._dataDirty) {\n      this._setValue();\n    }\n  }\n\n  /**\n   * Handle click events for the buttons.\n   */\n  private _evtClick(event: MouseEvent): void {\n    let target = event.target as HTMLElement;\n    switch (target) {\n      case this.revertButtonNode:\n        this._setValue();\n        break;\n      case this.commitButtonNode:\n        if (!this.commitButtonNode.hidden && !this.hasClass(ERROR_CLASS)) {\n          this._changeGuard = true;\n          this._mergeContent();\n          this._changeGuard = false;\n          this._setValue();\n        }\n        break;\n      case this.titleNode:\n      case this.collapserNode:\n        if (this.collapsible) {\n          let collapser = this.collapserNode;\n          if (collapser.classList.contains(COLLAPSED_CLASS)) {\n            collapser.classList.remove(COLLAPSED_CLASS);\n            this.editorHostNode.classList.remove(COLLAPSED_CLASS);\n          } else {\n            collapser.classList.add(COLLAPSED_CLASS);\n            this.editorHostNode.classList.add(COLLAPSED_CLASS);\n          }\n        }\n        break;\n      case this.editorHostNode:\n        this.editor.focus();\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Merge the user content.\n   */\n  private _mergeContent(): void {\n    let model = this.editor.model;\n    let current = this._source ? this._source.toJSON() : {};\n    let old = this._originalValue;\n    let user = JSON.parse(model.value.text) as JSONObject;\n    let source = this.source;\n    if (!source) {\n      return;\n    }\n\n    // If it is in user and has changed from old, set in current.\n    for (let key in user) {\n      if (!JSONExt.deepEqual(user[key], old[key] || null)) {\n        current[key] = user[key];\n      }\n    }\n    // If it was in old and is not in user, remove from current.\n    for (let key in old) {\n      if (!(key in user)) {\n        delete current[key];\n        source.delete(key);\n      }\n    }\n    // Set the values.\n    for (let key in current) {\n      source.set(key, current[key]);\n    }\n  }\n\n  /**\n   * Set the value given the owner contents.\n   */\n  private _setValue(): void {\n    this._dataDirty = false;\n    this._inputDirty = false;\n    this.revertButtonNode.hidden = true;\n    this.commitButtonNode.hidden = true;\n    this.removeClass(ERROR_CLASS);\n    let model = this.editor.model;\n    let content = this._source ? this._source.toJSON() : {};\n    this._changeGuard = true;\n    if (content === void 0) {\n      model.value.text = 'No data!';\n      this._originalValue = JSONExt.emptyObject;\n    } else {\n      let value = JSON.stringify(content, null, 4);\n      model.value.text = value;\n      this._originalValue = content;\n      // Move the cursor to within the brace.\n      if (value.length > 1 && value[0] === '{') {\n        this.editor.setCursorPosition({ line: 0, column: 1 });\n      }\n    }\n    this.editor.refresh();\n    this._changeGuard = false;\n    this.commitButtonNode.hidden = true;\n    this.revertButtonNode.hidden = true;\n  }\n\n  private _dataDirty = false;\n  private _inputDirty = false;\n  private _source: IObservableJSON | null = null;\n  private _originalValue = JSONExt.emptyObject;\n  private _changeGuard = false;\n}\n\n/**\n * The static namespace JSONEditor class statics.\n */\nexport namespace JSONEditor {\n  /**\n   * The options used to initialize a json editor.\n   */\n  export interface IOptions {\n    /**\n     * The editor factory used by the editor.\n     */\n    editorFactory: CodeEditor.Factory;\n\n    /**\n     * The title of the editor. Defaults to an empty string.\n     */\n    title?: string;\n\n    /**\n     * Whether the title should be collapsible. Defaults to `false`.\n     */\n    collapsible?: boolean;\n  }\n}\n\n/**\n * The namespace for module private data.\n */\nnamespace Private {\n  /**\n   * Create the JSON Editor node's content.\n   */\n  export function createEditorContent(\n    options: JSONEditor.IOptions\n  ): React.ReactElement<any> {\n    const revertTitle = 'Revert changes to data';\n    const confirmTitle = 'Commit changes to data';\n    const title = options.title || '';\n    const collapseClass = options.collapsible\n      ? `${COLLAPSER_CLASS} ${COLLAPSE_ENABLED_CLASS}`\n      : COLLAPSER_CLASS;\n\n    return (\n      <React.Fragment>\n        <div className={HEADER_CLASS}>\n          <span className={TITLE_CLASS}>{title}</span>\n          <span className={collapseClass} />\n          <span className={REVERT_CLASS} title={revertTitle} />\n          <span className={COMMIT_CLASS} title={confirmTitle} />\n        </div>\n        <div className={HOST_CLASS} />\n      </React.Fragment>\n    );\n  }\n}\n"]}